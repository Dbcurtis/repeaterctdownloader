#!wing
#!version=7.0
##################################################################
# Wing project file : User-specific branch                       #
##################################################################
[user attributes]
cache.last-mime-type = {loc('tests/test_commandreader.py'): 'text/x-python',
                        loc('updatetime.py'): 'text/x-python'}
codewarnings.enable-external-checkers = True
codewarnings.external-checkers-configuration = {'pylint': {'enabled': True}}
codewarnings.hide-directive-list = [('warning.1.undefined-name',
                                     loc('commandreader.py'),
                                     'CommandReader|0|.__init__|0|',
                                     'userinput',
                                     None),
                                    ('warning.1.undefined-name',
                                     loc('Repeater.py'),
                                     '_send_specified_file|0|',
                                     'controller',
                                     None)]
debug.breakpoints = {loc('../Python Scripts/removeTrailSpacesonLines.py.bak'): {67L: (0,
        None,
        1,
        0),
        71L: (0,
              None,
              1,
              0)},
                     loc('../Python Scripts/removeTrailSpacesonLines.py.bak.py'): {79L: (0,
        None,
        1,
        0)},
                     loc('learn.py'): {29L: (0,
        None,
        1,
        0)},
                     loc('test_myserial.py'): {47L: (0,
        None,
        1,
        0),
        52L: (0,
              None,
              1,
              0)},
                     loc('test_utils.py'): {76: (0,
        None,
        1,
        0)},
                     loc('testplay.py'): {12L: (0,
        None,
        1,
        0)},
                     loc('tests/test_getports.py'): {27L: (0,
        None,
        1,
        0)},
                     loc('tests/test_updatetime.py'): {34L: (0,
        None,
        1,
        0),
        326L: (0,
               None,
               1,
               0)},
                     loc('updatetime.py'): {255L: (0,
        None,
        1,
        0)}}
debug.err-values = {loc('file:C:/Program Files (x86)/Wing IDE 6.0/src/testing/runners/run_unittests_xml.py'): {},
                    loc('file:C:/Program Files (x86)/Wing Pro 7.0/src/testing/runners/run_unittests_xml.py'): {},
                    loc('file:C:/Program Files/Python37/Lib/unittest/case.py'): {},
                    loc('file:C:/Python34/lib/unittest/loader.py'): {},
                    loc('file:C:/Users/Dan/AppData/Roaming/Wing Pro 7/updates/7.2.6.0/src/testing/runners/run_unittests_xml.py'): {},
                    loc('Repeater.py'): {},
                    loc('controller.py'): {},
                    loc('myserial.py'): {},
                    loc('mytest.py'): {},
                    loc('removeTrailSpacesonLines.py'): {},
                    loc('test_commandreader.py'): {},
                    loc('test_myserial.py'): {},
                    loc('tests/test_commandreader.py'): {},
                    loc('tests/test_controllerspecific.py'): {},
                    loc('tests/test_dlxii.py'): {},
                    loc('tests/test_getports.py'): {},
                    loc('tests/test_updatetime.py'): {},
                    loc('tests/test_userinput.py'): {},
                    loc('tests/test_utils.py'): {},
                    loc('updatetime.py'): {}}
debug.exceptions-ignored = {loc('file:C:/Python34/Lib/unittest/case.py'): {654: True},
                            loc('commandreader.py'): {84: True}}
debug.recent-run-args = {loc('../Python Scripts/removeTrailSpacesonLines.py'): [u'  *.py *.txt',
        u'-np  -t  *.py *.txt',
        u'-np -t  *.py *.txt',
        u'-np *.py *.txt',
        u'-np *.py',
        u'*.py',
        u'-h',
        u'-np   deleteme.txt pysysconfig.py',
        u'-np -p  deleteme.txt pysysconfig.py',
        u'  deleteme.txt pysysconfig.py',
        u'-t  deleteme.txt pysysconfig.py',
        u'-t -p deleteme.txt pysysconfig.py',
        u'-t -p *.py *.txt',
        u'-t -p',
        u'*.py ../* test.txt',
        u'*.py bbb.txt',
        u'aaa.py bbb.txt',
        u'./*',
        u'/.',
        u'.',
        u'removeTrailSpacesonLines.py',
        u'--help'],
                         loc('updatetime.py'): [u'-h',
        u'dlx3 com3',
        u'dlx2 com3',
        u'dlx2 com1'],
                         loc('utils.py'): [u'-acr']}
gui.perspective-auto = True
gui.perspective-current = 'debug'
gui.perspectives = (1,
                    {'debug': ({},
                               {'windows': [{'name': '1frnBAIb1sFtZKY4YLbOyB'\
        '15OYvITX3g',
        'size-state': '',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': 'perspective_tools_only',
                 'current_pages': [0,
                                   2],
                 'full-screen': False,
                 'notebook_display': 'normal',
                 'notebook_percent': 0.3324634655532359,
                 'override_title': None,
                 'pagelist': [('project',
                               'tall',
                               0,
                               {}),
                              ('browser',
                               'tall',
                               0,
                               {}),
                              ('snippets',
                               'tall',
                               0,
                               {}),
                              ('refactoring',
                               'tall',
                               0,
                               {}),
                              ('code-warnings',
                               'tall',
                               0,
                               {}),
                              ('source-assistant',
                               'tall',
                               2,
                               {}),
                              ('debug-stack',
                               'tall',
                               1,
                               {'codeline-mode': 'below'}),
                              ('indent',
                               'tall',
                               2,
                               {}),
                              ('pylintpanel#02EFWRQK9X24',
                               'tall',
                               0,
                               {})],
                 'primary_view_state': {'area': 'wide',
        'constraint': 'perspective_tools_only',
        'current_pages': [3,
                          5],
        'notebook_display': 'normal',
        'notebook_percent': 0.2666666666666667,
        'override_title': None,
        'pagelist': [('batch-search',
                      'wide',
                      0,
                      {}),
                     ('interactive-search',
                      'wide',
                      0,
                      {}),
                     ('debug-exceptions',
                      'wide',
                      0,
                      {}),
                     ('testing',
                      'wide',
                      0,
                      {}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('debug-breakpoints',
                      'wide',
                      0,
                      {}),
                     ('uses',
                      'wide',
                      0,
                      {}),
                     ('versioncontrol.git',
                      'wide',
                      0,
                      {}),
                     ('python-shell',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'launch-id': None}),
                     ('bookmarks',
                      'wide',
                      1,
                      {}),
                     ('debug-io',
                      'wide',
                      1,
                      {}),
                     ('debug-probe',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'code-line': '',
                       'first-line': 0L,
                       'folded-linenos': [],
                       'history': {},
                       'launch-id': None,
                       'sel-line': 0L,
                       'sel-line-start': 0L,
                       'selection_end': 0L,
                       'selection_start': 0L,
                       'zoom': 0L}),
                     ('debug-watch',
                      'wide',
                      1,
                      {'node-states': [],
                       'tree-state': {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': (0,)}}),
                     ('debug-modules',
                      'wide',
                      1,
                      {}),
                     ('os-command',
                      'wide',
                      1,
                      {'last-percent': 0.8,
                       'toolbox-percent': 1.0,
                       'toolbox-tree-sel': ''})],
        'primary_view_state': {'editor_states': ({'locked': False},
        [loc('dlxii.py'),
         loc('tests/test_dlxii.py'),
         loc('tests/context.py'),
         loc('commandreader.py'),
         loc('tests/test_commandreader.py'),
         loc('file:C:/Program Files/Python37/Lib/unittest/case.py'),
         loc('controller.py'),
         loc('userinput.py'),
         loc('myserial.py'),
         loc('Repeater.py'),
         loc('tests/test_updatetime.py'),
         loc('file:C:/Program Files/Python37/Lib/unittest/loader.py')])},
        'saved_notebook_display': None,
        'split_percents': {0: 0.40729001584786056},
        'splits': 2,
        'tab_location': 'top',
        'traversal_pos': ((0,
                           3),
                          1560040003.985)},
                 'saved_notebook_display': None,
                 'split_percents': {0: 0.5},
                 'splits': 2,
                 'tab_location': 'left',
                 'traversal_pos': ((0,
                                    0),
                                   1557949859.853)},
        'window-alloc': (46,
                         62,
                         1747,
                         1042)}]}),
                     'edit': ({},
                              {'windows': [{'name': 'Qb4XE6UYHBRBVppBAUWYduv'\
        'nOQo7Lmmw',
        'size-state': 'maximized',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': 'perspective_tools_only',
                 'current_pages': [0,
                                   0],
                 'full-screen': False,
                 'notebook_display': 'normal',
                 'notebook_percent': 0.25,
                 'override_title': None,
                 'pagelist': [('project',
                               'tall',
                               0,
                               {}),
                              ('browser',
                               'tall',
                               0,
                               {'all_tree_states': {loc('file:C:/Program Files (x86)/Wing IDE 6.0/src/testing/runners/wingtest_common.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:C:/Program Files (x86)/Wing IDE 6.0/src/testing/runners/wingtest_common.py'),
                      'CreateOutputStream')]},
        loc('file:C:/Program Files/Python37/Lib/unittest/case.py'): {'expand'\
        'ed-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('file:C:/Program Files/Python37/Lib/unittest/loader.py'): {'expa'\
        'nded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('file:C:/Program Files/Python37/Lib/unittest/loader.py'),
                      'defaultTestLoader')]},
        loc('file:C:/Python34/Lib/unittest/case.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('file:C:/Python34/Lib/unittest/case.py'),
                      'DIFF_OMITTED')]},
        loc('file:C:/Python34/lib/unittest/loader.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('file:C:/Python34/lib/unittest/loader.py'),
                      'defaultTestLoader')]},
        loc('file:c:/Python34/Lib/codecs.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('file:c:/Python34/Lib/codecs.py'),
                      'backslashreplace_errors')]},
        loc('file:c:/Python34/Lib/genericpath.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:c:/Python34/Lib/genericpath.py'),
                      'commonprefix')]},
        loc('README.rst'): {'expanded-nodes': [],
                            'selected-nodes': [],
                            'top-node': None},
        loc('README.txt'): {'expanded-nodes': [],
                            'selected-nodes': [None],
                            'top-node': None},
        loc('Repeater.py'): {'expanded-nodes': [],
                             'selected-nodes': [],
                             'top-node': [('function def',
        loc('Repeater.py'),
        'doUtilityCmds')]},
        loc('__init__.py'): {'expanded-nodes': [[('generic attribute',
        loc('Repeater.py'),
        '')]],
                             'selected-nodes': [],
                             'top-node': [('generic attribute',
        loc('Repeater.py'),
        '')]},
        loc('commandreader.py'): {'expanded-nodes': [],
                                  'selected-nodes': [],
                                  'top-node': [('class def',
        loc('commandreader.py'),
        'CommandReader')]},
        loc('controller.py'): {'expanded-nodes': [],
                               'selected-nodes': [[('class def',
        loc('controller.py'),
        'Controller')]],
                               'top-node': [('class def',
        loc('controller.py'),
        'Controller')]},
        loc('controllerspecific.py'): {'expanded-nodes': [],
                                       'selected-nodes': [],
                                       'top-node': None},
        loc('dlxii.py'): {'expanded-nodes': [],
                          'selected-nodes': [],
                          'top-node': [('class def',
        loc('dlxii.py'),
        'DlxII')]},
        loc('getports.py'): {'expanded-nodes': [],
                             'selected-nodes': [],
                             'top-node': [('class def',
        loc('getports.py'),
        'GetPorts')]},
        loc('irlp en check code.txt'): {'expanded-nodes': [],
        'selected-nodes': [None],
        'top-node': None},
        loc('myserial.py'): {'expanded-nodes': [[('class def',
        loc('myserial.py'),
        'MySerial')],
        [('function def',
          loc('myserial.py'),
          'MySerial.findBaudRate'),
         ('function def',
          loc('myserial.py'),
          'MySerial.findBaudRate')]],
                             'selected-nodes': [[('function def',
        loc('myserial.py'),
        'MySerial.findBaudRate'),
        ('function def',
         loc('myserial.py'),
         'MySerial.findBaudRate')]],
                             'top-node': [('instance attribute',
        loc('x-wingide-zip://C:/Python34/lib/site-packages/pyserial-3.4-py3.4.egg//serial/serialutil.py'),
        'SerialBase:.exclusive'),
        ('instance attribute',
         loc('x-wingide-zip://C:/Python34/lib/site-packages/pyserial-3.4-py3.4.egg//serial/serialutil.py'),
         'SerialBase:.exclusive')]},
        loc('setup.cfg'): {'expanded-nodes': [],
                           'selected-nodes': [],
                           'top-node': None},
        loc('setup.py'): {'expanded-nodes': [],
                          'selected-nodes': [],
                          'top-node': [('generic attribute',
        loc('setup.py'),
        'f')]},
        loc('test.cmdlog.txt'): {'expanded-nodes': [],
                                 'selected-nodes': [None],
                                 'top-node': None},
        loc('test.exelog.txt'): {'expanded-nodes': [],
                                 'selected-nodes': [None],
                                 'top-node': None},
        loc('test.txt'): {'expanded-nodes': [],
                          'selected-nodes': [None],
                          'top-node': None},
        loc('test_commandreader.py'): {'expanded-nodes': [],
                                       'selected-nodes': [],
                                       'top-node': [('class def',
        loc('test_commandreader.py'),
        'TestCommandreader')]},
        loc('test_controller.py'): {'expanded-nodes': [],
                                    'selected-nodes': [],
                                    'top-node': [('class def',
        loc('test_controller.py'),
        'TestController')]},
        loc('test_myserial.py'): {'expanded-nodes': [],
                                  'selected-nodes': [[('class def',
        loc('test_myserial.py'),
        'TestMySerial')]],
                                  'top-node': [('class def',
        loc('test_myserial.py'),
        'TestMySerial')]},
        loc('test_userinput.py'): {'expanded-nodes': [],
                                   'selected-nodes': [],
                                   'top-node': [('class def',
        loc('test_userinput.py'),
        'Testuserinput')]},
        loc('testcontroller.cmdlog.txt'): {'expanded-nodes': [],
        'selected-nodes': [None],
        'top-node': None},
        loc('testcontroller.exelog.txt'): {'expanded-nodes': [],
        'selected-nodes': [None],
        'top-node': None},
        loc('tests/cmdreadertest.txt'): {'expanded-nodes': [],
        'selected-nodes': [None],
        'top-node': None},
        loc('tests/context.py'): {'expanded-nodes': [],
                                  'selected-nodes': [],
                                  'top-node': None},
        loc('tests/test_controllerspecific.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('tests/test_controllerspecific.py'),
                      'TestControllerspecific')]},
        loc('tests/test_dlxii.py'): {'expanded-nodes': [],
                                     'selected-nodes': [],
                                     'top-node': [('class def',
        loc('tests/test_dlxii.py'),
        'TestControllerspecific')]},
        loc('tests/test_getports.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('tests/test_getports.py'),
                      'TestGetPorts')]},
        loc('tests/test_updatetime.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('tests/test_updatetime.py'),
                      'Testupdatetime')]},
        loc('tests/test_utils.py'): {'expanded-nodes': [],
                                     'selected-nodes': [],
                                     'top-node': [('function def',
        loc('tests/test_utils.py'),
        'eprint')]},
        loc('userinput.py'): {'expanded-nodes': [],
                              'selected-nodes': [],
                              'top-node': [('generic attribute',
        loc('userinput.py'),
        'exc')]},
        loc('utils.py'): {'expanded-nodes': [],
                          'selected-nodes': [],
                          'top-node': [('class def',
        loc('utils.py'),
        'Utils')]},
        loc('unknown:<untitled> #9'): {'expanded-nodes': [],
                                       'selected-nodes': [],
                                       'top-node': None},
        loc('x-wingide-zip://C:/Python34/lib/site-packages/pyserial-3.4-py3.4.egg//serial/serialutil.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('x-wingide-zip://C:/Python34/lib/site-packages/pyserial-3.4-py3.4.egg//serial/serialutil.py'),
                      'basestring')]},
        loc('x-wingide-zip://C:/Python34/lib/site-packages/pyserial-3.4-py3.4.egg//serial/serialwin32.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('x-wingide-zip://C:/Python34/lib/site-packages/pyserial-3.4-py3.4.egg//serial/serialwin32.py'),
                      'Serial')]}},
                                'browse_mode': u'Current Module',
                                'follow-selection': False,
                                'sort_mode': 'Alphabetically',
                                'visibility_options': {u'Derived Classes': False,
        u'Imported': False,
        u'Modules': True}}),
                              ('snippets',
                               'tall',
                               0,
                               {'tree-states': {'__all__': [],
        u'c': [],
        u'django': [],
        u'html': [],
        u'py': []}}),
                              ('source-assistant',
                               'tall',
                               2,
                               {}),
                              ('indent',
                               'tall',
                               2,
                               {})],
                 'primary_view_state': {'area': 'wide',
        'constraint': 'perspective_tools_only',
        'current_pages': [3,
                          0],
        'notebook_display': 'normal',
        'notebook_percent': 0.30000000000000004,
        'override_title': None,
        'pagelist': [('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': '',
                                       'fReverse': False,
                                       'fSearchText': u'format',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': u'',
                                       'fReverse': False,
                                       'fSearchText': u'package',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False}}),
                     ('debug-exceptions',
                      'wide',
                      0,
                      {}),
                     ('testing',
                      'wide',
                      0,
                      {}),
                     ('python-shell',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'launch-id': None}),
                     ('bookmarks',
                      'wide',
                      1,
                      {'filter-text': ''}),
                     ('messages',
                      'wide',
                      2,
                      {'current-domain': 0}),
                     ('os-command',
                      'wide',
                      1,
                      {'last-percent': 0.8,
                       'toolbox-percent': 1.0,
                       'toolbox-tree-sel': ''})],
        'primary_view_state': {'editor_states': ({'locked': False},
        [loc('commandreader.py'),
         loc('controller.py'),
         loc('controllerspecific.py'),
         loc('dlxii.py'),
         loc('myserial.py'),
         loc('Repeater.py'),
         loc('tests/test_controller.py'),
         loc('tests/test_controllerspecific.py'),
         loc('userinput.py')])},
        'saved_notebook_display': None,
        'split_percents': {0: 0.5454545454545454},
        'splits': 2,
        'tab_location': 'top',
        'traversal_pos': ((0,
                           3),
                          1602355281.328)},
                 'saved_notebook_display': None,
                 'split_percents': {0: 0.5},
                 'splits': 2,
                 'tab_location': 'left',
                 'traversal_pos': ((0,
                                    0),
                                   1557949859.853)},
        'window-alloc': (380,
                         30,
                         1424,
                         1042)}]}),
                     'user': ({},
                              {'windows': [{'name': 'Qb4XE6UYHBRBVppBAUWYduv'\
        'nOQo7Lmmw',
        'size-state': 'maximized',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': 'perspective_tools_only',
                 'current_pages': [0,
                                   0],
                 'full-screen': False,
                 'notebook_display': 'normal',
                 'notebook_percent': 0.20044215180545322,
                 'override_title': None,
                 'pagelist': [('project',
                               'tall',
                               0,
                               {}),
                              ('browser',
                               'tall',
                               0,
                               {'all_tree_states': {loc('file:C:/Program Files (x86)/Wing IDE 6.0/src/testing/runners/wingtest_common.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:C:/Program Files (x86)/Wing IDE 6.0/src/testing/runners/wingtest_common.py'),
                      'CreateOutputStream')]},
        loc('file:C:/Python34/Lib/unittest/case.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('file:C:/Python34/Lib/unittest/case.py'),
                      'DIFF_OMITTED')]},
        loc('file:C:/Python34/lib/unittest/loader.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('file:C:/Python34/lib/unittest/loader.py'),
                      'defaultTestLoader')]},
        loc('file:c:/Python34/Lib/codecs.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('file:c:/Python34/Lib/codecs.py'),
                      'backslashreplace_errors')]},
        loc('file:c:/Python34/Lib/genericpath.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:c:/Python34/Lib/genericpath.py'),
                      'commonprefix')]},
        loc('README.rst'): {'expanded-nodes': [],
                            'selected-nodes': [],
                            'top-node': None},
        loc('README.txt'): {'expanded-nodes': [],
                            'selected-nodes': [None],
                            'top-node': None},
        loc('Repeater.py'): {'expanded-nodes': [],
                             'selected-nodes': [],
                             'top-node': [('function def',
        loc('Repeater.py'),
        'doUtilityCmds')]},
        loc('__init__.py'): {'expanded-nodes': [[('generic attribute',
        loc('Repeater.py'),
        '')]],
                             'selected-nodes': [],
                             'top-node': [('generic attribute',
        loc('Repeater.py'),
        '')]},
        loc('commandreader.py'): {'expanded-nodes': [],
                                  'selected-nodes': [],
                                  'top-node': [('class def',
        loc('commandreader.py'),
        'CommandReader')]},
        loc('controller.py'): {'expanded-nodes': [],
                               'selected-nodes': [[('class def',
        loc('controller.py'),
        'Controller')]],
                               'top-node': [('class def',
        loc('controller.py'),
        'Controller')]},
        loc('controllerspecific.py'): {'expanded-nodes': [],
                                       'selected-nodes': [],
                                       'top-node': None},
        loc('dlxii.py'): {'expanded-nodes': [],
                          'selected-nodes': [],
                          'top-node': [('class def',
        loc('dlxii.py'),
        'DlxII')]},
        loc('getports.py'): {'expanded-nodes': [],
                             'selected-nodes': [],
                             'top-node': [('class def',
        loc('getports.py'),
        'GetPorts')]},
        loc('irlp en check code.txt'): {'expanded-nodes': [],
        'selected-nodes': [None],
        'top-node': None},
        loc('myserial.py'): {'expanded-nodes': [[('class def',
        loc('myserial.py'),
        'MySerial')],
        [('function def',
          loc('myserial.py'),
          'MySerial.findBaudRate'),
         ('function def',
          loc('myserial.py'),
          'MySerial.findBaudRate')]],
                             'selected-nodes': [[('function def',
        loc('myserial.py'),
        'MySerial.findBaudRate'),
        ('function def',
         loc('myserial.py'),
         'MySerial.findBaudRate')]],
                             'top-node': [('instance attribute',
        loc('x-wingide-zip://C:/Python34/lib/site-packages/pyserial-3.4-py3.4.egg//serial/serialutil.py'),
        'SerialBase:.exclusive'),
        ('instance attribute',
         loc('x-wingide-zip://C:/Python34/lib/site-packages/pyserial-3.4-py3.4.egg//serial/serialutil.py'),
         'SerialBase:.exclusive')]},
        loc('setup.cfg'): {'expanded-nodes': [],
                           'selected-nodes': [],
                           'top-node': None},
        loc('setup.py'): {'expanded-nodes': [],
                          'selected-nodes': [],
                          'top-node': [('generic attribute',
        loc('setup.py'),
        'f')]},
        loc('test.cmdlog.txt'): {'expanded-nodes': [],
                                 'selected-nodes': [None],
                                 'top-node': None},
        loc('test.exelog.txt'): {'expanded-nodes': [],
                                 'selected-nodes': [None],
                                 'top-node': None},
        loc('test.txt'): {'expanded-nodes': [],
                          'selected-nodes': [None],
                          'top-node': None},
        loc('test_commandreader.py'): {'expanded-nodes': [],
                                       'selected-nodes': [],
                                       'top-node': [('class def',
        loc('test_commandreader.py'),
        'TestCommandreader')]},
        loc('test_controller.py'): {'expanded-nodes': [],
                                    'selected-nodes': [],
                                    'top-node': [('class def',
        loc('test_controller.py'),
        'TestController')]},
        loc('test_myserial.py'): {'expanded-nodes': [],
                                  'selected-nodes': [[('class def',
        loc('test_myserial.py'),
        'TestMySerial')]],
                                  'top-node': [('class def',
        loc('test_myserial.py'),
        'TestMySerial')]},
        loc('test_userinput.py'): {'expanded-nodes': [],
                                   'selected-nodes': [],
                                   'top-node': [('class def',
        loc('test_userinput.py'),
        'Testuserinput')]},
        loc('testcontroller.cmdlog.txt'): {'expanded-nodes': [],
        'selected-nodes': [None],
        'top-node': None},
        loc('testcontroller.exelog.txt'): {'expanded-nodes': [],
        'selected-nodes': [None],
        'top-node': None},
        loc('tests/cmdreadertest.txt'): {'expanded-nodes': [],
        'selected-nodes': [None],
        'top-node': None},
        loc('userinput.py'): {'expanded-nodes': [],
                              'selected-nodes': [],
                              'top-node': [('generic attribute',
        loc('userinput.py'),
        'ui')]},
        loc('utils.py'): {'expanded-nodes': [],
                          'selected-nodes': [],
                          'top-node': [('class def',
        loc('utils.py'),
        'Utils')]},
        loc('unknown:<untitled> #10'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('x-wingide-zip://C:/Python34/lib/site-packages/pyserial-3.4-py3.4.egg//serial/serialutil.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('x-wingide-zip://C:/Python34/lib/site-packages/pyserial-3.4-py3.4.egg//serial/serialutil.py'),
                      'basestring')]},
        loc('x-wingide-zip://C:/Python34/lib/site-packages/pyserial-3.4-py3.4.egg//serial/serialwin32.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('x-wingide-zip://C:/Python34/lib/site-packages/pyserial-3.4-py3.4.egg//serial/serialwin32.py'),
                      'Serial')]}},
                                'browse_mode': u'Current Module',
                                'follow-selection': False,
                                'sort_mode': 'Alphabetically',
                                'visibility_options': {u'Derived Classes': False,
        u'Imported': False,
        u'Modules': True}}),
                              ('snippets',
                               'tall',
                               0,
                               {'tree-states': {'__all__': [],
        u'c': [],
        u'django': [],
        u'html': [],
        u'py': [(u'from',
                 u'all',
                 u'')]}}),
                              ('refactoring',
                               'tall',
                               0,
                               {}),
                              ('source-assistant',
                               'tall',
                               2,
                               {}),
                              ('debug-stack',
                               'tall',
                               1,
                               {}),
                              ('indent',
                               'tall',
                               2,
                               {})],
                 'primary_view_state': {'area': 'wide',
        'constraint': 'perspective_tools_only',
        'current_pages': [3,
                          0],
        'notebook_display': 'normal',
        'notebook_percent': 0.27217125382262997,
        'override_title': None,
        'pagelist': [('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 46,
                                       'fReplaceText': '',
                                       'fReverse': False,
                                       'fSearchText': u'format',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 46,
                                       'fReplaceText': '',
                                       'fReverse': False,
                                       'fSearchText': u'include_packa',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False}}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('debug-exceptions',
                      'wide',
                      0,
                      {}),
                     ('debug-breakpoints',
                      'wide',
                      0,
                      {'tree-state': []}),
                     ('testing',
                      'wide',
                      0,
                      {'added-files': [loc('tests/test_getports.py'),
                                       loc('tests/test_myserial.py'),
                                       loc('tests/test_utils.py'),
                                       loc('tests/test_controller.py'),
                                       loc('tests/test_commandreader.py'),
                                       loc('tests/test_userinput.py')],
                       'filter': u'',
                       'recent-filters': None,
                       'sort-order': 'alpha',
                       'tree-state': {'expanded-nodes': [(5,),
        (5,
         0)],
                                      'selected-nodes': [(0,)],
                                      'top-node': (0,)}}),
                     ('uses',
                      'wide',
                      0,
                      {}),
                     ('debug-io',
                      'wide',
                      1,
                      {}),
                     ('debug-probe',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'first-line': 0L,
                       'folded-linenos': [],
                       'history': {},
                       'launch-id': None,
                       'sel-line': 0L,
                       'sel-line-start': 0L,
                       'selection_end': 0L,
                       'selection_start': 0L,
                       'zoom': 0L}),
                     ('debug-watch',
                      'wide',
                      1,
                      {'node-states': [],
                       'tree-state': {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': (0,)}}),
                     ('debug-modules',
                      'wide',
                      1,
                      {}),
                     ('python-shell',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'launch-id': None}),
                     ('bookmarks',
                      'wide',
                      1,
                      {}),
                     ('messages',
                      'wide',
                      2,
                      {'current-domain': 0}),
                     ('os-command',
                      'wide',
                      1,
                      {'last-percent': 0.8,
                       'toolbox-percent': 1.0,
                       'toolbox-tree-sel': ''})],
        'primary_view_state': {'editor_states': ({'locked': False},
        [loc('file:C:/Program Files (x86)/Wing IDE 6.0/resources/doc/en/TOC.idx')])},
        'saved_notebook_display': None,
        'split_percents': {0: 0.5454545454545454},
        'splits': 2,
        'tab_location': 'top'},
                 'saved_notebook_display': None,
                 'split_percents': {0: 0.5},
                 'splits': 2,
                 'tab_location': 'left'},
        'window-alloc': (142,
                         146,
                         1518,
                         888)}]})})
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': '1frnBAIb1sFtZKY4YLbOyB15OY'\
        'vITX3g',
        'size-state': '',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': None,
                 'current_pages': [4,
                                   0],
                 'full-screen': False,
                 'notebook_display': 'normal',
                 'notebook_percent': 0.18841336116910234,
                 'override_title': None,
                 'pagelist': [('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by name',
        'list-files-first': False,
        'tree-states': {'deep': {'expanded-nodes': [],
                                 'selected-nodes': [(27,)],
                                 'top-node': (0,)}},
        'tree-style': 'deep'}}),
                              ('browser',
                               'tall',
                               0,
                               {'all_tree_states': {loc('file:C:/Envs/p34/Lib/site-packages/serial/serialwin32.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:C:/Envs/p34/Lib/site-packages/serial/serialwin32.py'),
                      'device')]},
        loc('file:C:/Program Files (x86)/Wing IDE 6.0/src/testing/runners/run_unittests_xml.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:C:/Program Files (x86)/Wing IDE 6.0/src/testing/runners/run_unittests_xml.py'),
                      'LoadCommon')]},
        loc('file:C:/Program Files (x86)/Wing IDE 6.0/src/testing/runners/wingtest_common.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:C:/Program Files (x86)/Wing IDE 6.0/src/testing/runners/wingtest_common.py'),
                      'CreateOutputStream')]},
        loc('file:C:/Program Files/Python38/Lib/unittest/loader.py'): {'expa'\
        'nded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('file:C:/Program Files/Python38/Lib/unittest/loader.py'),
                      'defaultTestLoader')]},
        loc('file:C:/Python34/Lib/_strptime.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:C:/Python34/Lib/_strptime.py'),
                      'LocaleTime')]},
        loc('file:C:/Python34/Lib/argparse.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('file:C:/Python34/Lib/argparse.py'),
                             '__version__')]],
        'top-node': [('class def',
                      loc('file:C:/Python34/Lib/argparse.py'),
                      'Action')]},
        loc('file:C:/Python34/Lib/ntpath.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:C:/Python34/Lib/ntpath.py'),
                      'abspath')]},
        loc('file:C:/Python34/Lib/unittest/case.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('file:C:/Python34/Lib/unittest/case.py'),
                      'DIFF_OMITTED')]},
        loc('file:C:/Python34/Lib/unittest/main.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('file:C:/Python34/Lib/unittest/main.py'),
                      'main')]},
        loc('file:C:/Python34/Lib/unittest/suite.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:C:/Python34/Lib/unittest/suite.py'),
                      'BaseTestSuite')]},
        loc('file:C:/Python34/lib/unittest/loader.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('file:C:/Python34/lib/unittest/loader.py'),
                      'defaultTestLoader')]},
        loc('../Python Scripts/removeTrailSpacesonLines.py'): {'expanded-nod'\
        'es': [],
        'selected-nodes': [[('function def',
                             loc('../Python Scripts/removeTrailSpacesonLines.py'),
                             '__main')]],
        'top-node': [('function def',
                      loc('../Python Scripts/removeTrailSpacesonLines.py'),
                      '__main')]},
        loc('../Python Scripts/removeTrailSpacesonLines.py.bak'): {'expanded'\
        '-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../Python Scripts/removeTrailSpacesonLines.py.bak'),
                      '__main')]},
        loc('../Python Scripts/removeTrailSpacesonLines.py.bak.py'): {'expan'\
        'ded-nodes': [],
        'selected-nodes': [[('function def',
                             loc('../Python Scripts/removeTrailSpacesonLines.py'),
                             '__main')]],
        'top-node': [('function def',
                      loc('../Python Scripts/removeTrailSpacesonLines.py'),
                      '__main')]},
        loc('Repeater.py'): {'expanded-nodes': [],
                             'selected-nodes': [],
                             'top-node': [('function def',
        loc('Repeater.py'),
        'do_utility_cmds')]},
        loc('cmdfilebuilder.py'): {'expanded-nodes': [],
                                   'selected-nodes': [],
                                   'top-node': None},
        loc('commandreader.py'): {'expanded-nodes': [],
                                  'selected-nodes': [],
                                  'top-node': [('class def',
        loc('commandreader.py'),
        'CommandReader')]},
        loc('controller.py'): {'expanded-nodes': [[('class def',
        loc('controller.py'),
        'Controller')]],
                               'selected-nodes': [],
                               'top-node': [('generic attribute',
        loc('controller.py'),
        'BYTE_2_STRING')]},
        loc('controllerspecific.py'): {'expanded-nodes': [[('class def',
        loc('controllerspecific.py'),
        'ControllerSpecific')]],
                                       'selected-nodes': [[('class def',
        loc('controllerspecific.py'),
        'ControllerSpecific')]],
                                       'top-node': [('class def',
        loc('controllerspecific.py'),
        'ControllerSpecific')]},
        loc('dlxii.py'): {'expanded-nodes': [],
                          'selected-nodes': [],
                          'top-node': [('class def',
        loc('dlxii.py'),
        'Device')]},
        loc('getports.py'): {'expanded-nodes': [],
                             'selected-nodes': [[('class def',
        loc('getports.py'),
        'GetPorts')]],
                             'top-node': [('class def',
        loc('getports.py'),
        'GetPorts')]},
        loc('knowncontrollers.py'): {'expanded-nodes': [],
                                     'selected-nodes': [],
                                     'top-node': [('class def',
        loc('knowncontrollers.py'),
        'KnownControllers')]},
        loc('myserial.py'): {'expanded-nodes': [[('class def',
        loc('myserial.py'),
        'MySerial')]],
                             'selected-nodes': [[('class def',
        loc('myserial.py'),
        'MySerial')]],
                             'top-node': [('class def',
        loc('myserial.py'),
        'MySerial')]},
        loc('mytest.py'): {'expanded-nodes': [],
                           'selected-nodes': [],
                           'top-node': [('function def',
        loc('mytest.py'),
        'testthrow')]},
        loc('rlc1plus.py'): {'expanded-nodes': [],
                             'selected-nodes': [],
                             'top-node': [('class def',
        loc('rlc1plus.py'),
        'Rlc1Plus')]},
        loc('setup.py'): {'expanded-nodes': [],
                          'selected-nodes': [],
                          'top-node': [('generic attribute',
        loc('setup.py'),
        'f')]},
        loc('tests/cmt_test_1.txt'): {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': None},
        loc('tests/cmt_test_2.txt'): {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': None},
        loc('tests/cmt_test_3.txt'): {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': None},
        loc('tests/cmt_test_4.txt'): {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': None},
        loc('tests/cmt_test_5.txt'): {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': None},
        loc('tests/context.py'): {'expanded-nodes': [],
                                  'selected-nodes': [],
                                  'top-node': None},
        loc('tests/md_test_1.txt'): {'expanded-nodes': [],
                                     'selected-nodes': [],
                                     'top-node': None},
        loc('tests/test.cmdlog.txt'): {'expanded-nodes': [],
                                       'selected-nodes': [],
                                       'top-node': None},
        loc('tests/test_cmdfilebuilder.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('tests/test_cmdfilebuilder.py'),
                      'TestCmdfilebuilder')]},
        loc('tests/test_commandreader.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('tests/test_commandreader.py'),
                      'eprint')]},
        loc('tests/test_controller.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('tests/test_controller.py'),
                      'eprint')]},
        loc('tests/test_controllerspecific.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('tests/test_controllerspecific.py'),
                      'TestControllerspecific')]},
        loc('tests/test_dlxii.py'): {'expanded-nodes': [],
                                     'selected-nodes': [],
                                     'top-node': [('class def',
        loc('tests/test_dlxii.py'),
        'TestControllerspecific')]},
        loc('tests/test_getports.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('tests/test_getports.py'),
                      'TestGetPorts')]},
        loc('tests/test_knowncontrollers.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('tests/test_knowncontrollers.py'),
                      'TestKnownControllers')]},
        loc('tests/test_myserial.py'): {'expanded-nodes': [],
        'selected-nodes': [[('class def',
                             loc('tests/test_myserial.py'),
                             'TestMySerial')]],
        'top-node': [('function def',
                      loc('tests/test_myserial.py'),
                      'eprint')]},
        loc('tests/test_updatetime.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('tests/test_updatetime.py'),
                      'Testupdatetime')]},
        loc('tests/test_userinput.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('tests/test_userinput.py'),
                      'eprint')]},
        loc('tests/test_utils.py'): {'expanded-nodes': [],
                                     'selected-nodes': [],
                                     'top-node': [('function def',
        loc('tests/test_utils.py'),
        'eprint')]},
        loc('updatetime.py'): {'expanded-nodes': [],
                               'selected-nodes': [[('class def',
        loc('updatetime.py'),
        'Stuff')]],
                               'top-node': [('function def',
        loc('updatetime.py'),
        'check_date')]},
        loc('userinput.py'): {'expanded-nodes': [[('class def',
        loc('userinput.py'),
        'UserInput')]],
                              'selected-nodes': [],
                              'top-node': [('generic attribute',
        loc('userinput.py'),
        'exc')]},
        loc('utils.py'): {'expanded-nodes': [[('class def',
        loc('utils.py'),
        'Utils')]],
                          'selected-nodes': [],
                          'top-node': [('generic attribute',
        loc('utils.py'),
        'IF_N')]},
        loc('unknown:<untitled> #14'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('unknown:<untitled> #13'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('unknown:<untitled> #12'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('unknown:<untitled> #11'),
                      'TestCmdfilebuilder')]}},
                                'browse_mode': u'Current Module',
                                'follow-selection': False,
                                'sort_mode': 'Alphabetically',
                                'visibility_options': {u'Derived Classes': False,
        u'Imported': False,
        u'Modules': True}}),
                              ('snippets',
                               'tall',
                               0,
                               {'tree-states': {'__all__': [],
        u'c': [],
        u'django': [],
        u'html': [],
        u'py': []}}),
                              ('refactoring',
                               'tall',
                               0,
                               {}),
                              ('code-warnings',
                               'tall',
                               0,
                               {}),
                              ('source-assistant',
                               'tall',
                               2,
                               {}),
                              ('debug-stack',
                               'tall',
                               1,
                               {'codeline-mode': 'below'}),
                              ('indent',
                               'tall',
                               2,
                               {}),
                              ('pylintpanel#02EFWRQK9X24',
                               'tall',
                               0,
                               {})],
                 'primary_view_state': {'area': 'wide',
        'constraint': None,
        'current_pages': [7,
                          6],
        'notebook_display': 'normal',
        'notebook_percent': 0.34538152610441764,
        'override_title': None,
        'pagelist': [('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'documentation'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': '',
                                       'fReverse': False,
                                       'fSearchText': u'virtual env',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': u'= ',
                                       'fReverse': False,
                                       'fSearchText': u'Any',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False}}),
                     ('debug-exceptions',
                      'wide',
                      0,
                      {}),
                     ('testing',
                      'wide',
                      0,
                      {'added-files': [loc('tests/test_updatetime.py'),
                                       loc('tests/test_dlxii.py'),
                                       loc('tests/test_getports.py'),
                                       loc('tests/test_commandreader.py'),
                                       loc('tests/test_myserial.py'),
                                       loc('tests/test_userinput.py'),
                                       loc('tests/test_controller.py'),
                                       loc('tests/test_knowncontrollers.py'),
                                       loc('tests/test_utils.py'),
                                       loc('tests/test_controllerspecific.py')],
                       'filter': u'',
                       'recent-filters': None,
                       'sort-order': 'source-lineno',
                       'tree-state': {'expanded-nodes': [(7,),
        (7,
         0)],
                                      'selected-nodes': [(7,
        0,
        3)],
                                      'top-node': (0,)}}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('debug-breakpoints',
                      'wide',
                      0,
                      {'tree-state': []}),
                     ('uses',
                      'wide',
                      0,
                      {}),
                     ('versioncontrol.git',
                      'wide',
                      0,
                      {}),
                     ('python-shell',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'code-line': '',
                       'first-line': 0L,
                       'folded-linenos': [],
                       'history': {},
                       'launch-id': None,
                       'sel-line': 2L,
                       'sel-line-start': 157L,
                       'selection_end': 157L,
                       'selection_start': 157L,
                       'zoom': 0L}),
                     ('bookmarks',
                      'wide',
                      1,
                      {'filter-text': ''}),
                     ('debug-io',
                      'wide',
                      1,
                      {}),
                     ('debug-probe',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'code-line': '',
                       'first-line': 0L,
                       'folded-linenos': [],
                       'history': {},
                       'launch-id': None,
                       'sel-line': 0L,
                       'sel-line-start': 0L,
                       'selection_end': 0L,
                       'selection_start': 0L,
                       'zoom': 0L}),
                     ('debug-watch',
                      'wide',
                      1,
                      {'node-states': [],
                       'tree-state': {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': (0,)}}),
                     ('debug-modules',
                      'wide',
                      1,
                      {}),
                     ('os-command',
                      'wide',
                      1,
                      {'last-percent': 0.8,
                       'toolbox-percent': 1.0,
                       'toolbox-tree-sel': 'cmd-zcYJtQx2oHoLWlXq'})],
        'primary_view_state': {'editor_states': ({'bookmarks': ([[loc('updatetime.py'),
        {'attrib-starts': [('process_cmdline|0|',
                            37)],
         'code-line': '        args = _PARSER.parse_args()\r\n',
         'first-line': 42L,
         'folded-linenos': [],
         'sel-line': 58L,
         'sel-line-start': 1963L,
         'selection_end': 1985L,
         'selection_start': 1978L,
         'zoom': -1L},
        1603689752.709],
        [loc('updatetime_aux.py'),
         {'attrib-starts': [('check_date|0|',
                             95)],
          'code-line': '    _om:str = TWO_CHAR.format(num=_os_time.tm_mon)\r'\
                       '\n',
          'first-line': 96L,
          'folded-linenos': [],
          'sel-line': 116L,
          'sel-line-start': 3881L,
          'selection_end': 3903L,
          'selection_start': 3895L,
          'zoom': 0L},
         1603690190.91],
        [loc('updatetime_aux.py'),
         {'attrib-starts': [('process_cmdline|0|',
                             210)],
          'code-line': '            raise Exception(msg)\r\n',
          'first-line': 234L,
          'folded-linenos': [],
          'sel-line': 258L,
          'sel-line-start': 8282L,
          'selection_end': 8314L,
          'selection_start': 8314L,
          'zoom': 0L},
         1603690779.891],
        [loc('updatetime.py'),
         {'attrib-starts': [('main|0|',
                             243)],
          'code-line': '    stuff = Stuff(process_cmdline(getports.GetPorts('\
                       ').get()))\r\n',
          'first-line': 238L,
          'folded-linenos': [],
          'sel-line': 255L,
          'sel-line-start': 8825L,
          'selection_end': 8858L,
          'selection_start': 8843L,
          'zoom': -1L},
         1603691491.931],
        [loc('updatetime.py'),
         {'attrib-starts': [('Stuff|0|',
                             96),
                            ('Stuff|0|.setdate|0|',
                             145)],
          'code-line': '        _the_time[True] = time.localtime(time.time()'\
                       ')\r\n',
          'first-line': 134L,
          'folded-linenos': [],
          'sel-line': 162L,
          'sel-line-start': 5389L,
          'selection_end': 5406L,
          'selection_start': 5397L,
          'zoom': -1L},
         1603691793.22],
        [loc('updatetime.py'),
         {'attrib-starts': [('Stuff|0|',
                             96),
                            ('Stuff|0|.doit|0|',
                             174)],
          'code-line': '            noneed = cntdown == SET_ATTEMPT_MAX - 1'\
                       '\r\n',
          'first-line': 227L,
          'folded-linenos': [],
          'sel-line': 223L,
          'sel-line-start': 7739L,
          'selection_end': 7747L,
          'selection_start': 7747L,
          'zoom': -1L},
         1603691926.852],
        [loc('tests/test_updatetime.py'),
         {'attrib-starts': [('Testupdatetime|0|',
                             15),
                            ('Testupdatetime|0|.testdelay|0|',
                             30)],
          'code-line': '        self.assertTrue(result[1])\r\n',
          'first-line': 87L,
          'folded-linenos': [],
          'sel-line': 43L,
          'sel-line-start': 1007L,
          'selection_end': 1037L,
          'selection_start': 1031L,
          'zoom': 0L},
         1603692096.769],
        [loc('updatetime.py'),
         {'attrib-starts': [('Stuff|0|',
                             96),
                            ('Stuff|0|.doit|0|',
                             174)],
          'code-line': '            noneed = cntdown == SET_ATTEMPT_MAX - 1'\
                       '\r\n',
          'first-line': 227L,
          'folded-linenos': [],
          'sel-line': 223L,
          'sel-line-start': 7739L,
          'selection_end': 7747L,
          'selection_start': 7747L,
          'zoom': -1L},
         1603692105.055],
        [loc('tests/test_updatetime.py'),
         {'attrib-starts': [('Testupdatetime|0|',
                             15),
                            ('Testupdatetime|0|.testcheckdate|0|',
                             86)],
          'code-line': '        _res = tup[2](mx)\r\n',
          'first-line': 177L,
          'folded-linenos': [],
          'sel-line': 101L,
          'sel-line-start': 3159L,
          'selection_end': 3183L,
          'selection_start': 3181L,
          'zoom': 0L},
         1603692184.13],
        [loc('updatetime.py'),
         {'attrib-starts': [('main|0|',
                             242)],
          'code-line': '    stuff = Stuff(process_cmdline(getports.GetPorts('\
                       ').get()))\r\n',
          'first-line': 149L,
          'folded-linenos': [],
          'sel-line': 254L,
          'sel-line-start': 8803L,
          'selection_end': 8820L,
          'selection_start': 8815L,
          'zoom': -1L},
         1603692209.739],
        [loc('tests/test_updatetime.py'),
         {'attrib-starts': [('Testupdatetime|0|',
                             15),
                            ('Testupdatetime|0|.testcheckdate|0|',
                             86)],
          'code-line': '        _res = tup[2](mx)\r\n',
          'first-line': 177L,
          'folded-linenos': [],
          'sel-line': 101L,
          'sel-line-start': 3159L,
          'selection_end': 3183L,
          'selection_start': 3181L,
          'zoom': 0L},
         1603692213.783],
        [loc('tests/test_updatetime.py'),
         {'attrib-starts': [('Testupdatetime|0|',
                             15),
                            ('Testupdatetime|0|.testdoit|0|',
                             324)],
          'code-line': '        devs:List[str] = getports.GetPorts().get()\r'\
                       '\n',
          'first-line': 317L,
          'folded-linenos': [],
          'sel-line': 326L,
          'sel-line-start': 11423L,
          'selection_end': 11471L,
          'selection_start': 11468L,
          'zoom': 0L},
         1603692380.956],
        [loc('tests/test_updatetime.py'),
         {'attrib-starts': [('Testupdatetime|0|',
                             15),
                            ('Testupdatetime|0|.testdoit|0|',
                             324)],
          'code-line': '        devs: List[str] = getports.GetPorts().get()'\
                       '\r\n',
          'first-line': 140L,
          'folded-linenos': [],
          'sel-line': 326L,
          'sel-line-start': 11423L,
          'selection_end': 11471L,
          'selection_start': 11468L,
          'zoom': 0L},
         1605074986.261],
        [loc('getports.py'),
         {'attrib-starts': [('GetPorts|0|',
                             16),
                            ('GetPorts|0|.get|0|',
                             39)],
          'code-line': '        _ports = serial.tools.list_ports.comports()'\
                       '\r\n',
          'first-line': 12L,
          'folded-linenos': [],
          'sel-line': 46L,
          'sel-line-start': 1294L,
          'selection_end': 1308L,
          'selection_start': 1302L,
          'zoom': 0L},
         1605075008.35],
        [loc('getports.py'),
         {'attrib-starts': [('GetPorts|0|',
                             16),
                            ('GetPorts|0|.get|0|',
                             39)],
          'code-line': '            self.devs = [_p for _p in [_port[0] for '\
                       '_port in _ports]]\r\n',
          'first-line': 27L,
          'folded-linenos': [],
          'sel-line': 50L,
          'sel-line-start': 1403L,
          'selection_end': 1472L,
          'selection_start': 1403L,
          'zoom': 0L},
         1605075034.292],
        [loc('getports.py'),
         {'attrib-starts': [('GetPorts|0|',
                             16),
                            ('GetPorts|0|.__init__|0|',
                             28)],
          'code-line': "        LOGGER.debug(f'Detected Python serial versio"\
                       "n {_aa}')\r\n",
          'first-line': 27L,
          'folded-linenos': [],
          'sel-line': 37L,
          'sel-line-start': 1081L,
          'selection_end': 1142L,
          'selection_start': 1089L,
          'zoom': 0L},
         1605075054.573],
        [loc('getports.py'),
         {'attrib-starts': [('GetPorts|0|',
                             16),
                            ('GetPorts|0|.get|0|',
                             39)],
          'code-line': "        LOGGER.debug(f'exited get with {self.devs}')"\
                       "\r\n",
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 55L,
          'sel-line-start': 1586L,
          'selection_end': 1638L,
          'selection_start': 1594L,
          'zoom': 0L},
         1605075081.287],
        [loc('getports.py'),
         {'attrib-starts': [],
          'code-line': '# from typing import Any, Union, Tuple, Callable, Ty'\
                       'peVar, Generic, Sequence, Mapping, List, Dict, Set, '\
                       'Deque, Iterable\r\n',
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 3L,
          'sel-line-start': 55L,
          'selection_end': 174L,
          'selection_start': 174L,
          'zoom': 0L},
         1605075101.548],
        [loc('utils.py'),
         {'attrib-starts': [('Utils|0|',
                             35),
                            ('Utils|0|.doacr|0|',
                             189)],
          'code-line': "        lstcmd = self.cont_info.newcmd_dict.get('lst"\
                       "cmd')\r\n",
          'first-line': 213L,
          'folded-linenos': [],
          'sel-line': 215L,
          'sel-line-start': 7503L,
          'selection_end': 7560L,
          'selection_start': 7560L,
          'zoom': 0L},
         1605075152.423],
        [loc('utils.py'),
         {'attrib-starts': [('Utils|0|',
                             35),
                            ('Utils|0|.doacr|0|',
                             189)],
          'code-line': "                    f'specify the command and range "\
                       "of argument '\r\n",
          'first-line': 213L,
          'folded-linenos': [],
          'sel-line': 227L,
          'sel-line-start': 7940L,
          'selection_end': 8005L,
          'selection_start': 7960L,
          'zoom': 0L},
         1605075183.306]],
        20),
        'current-loc': loc('utils.py'),
        'editor-state-list': [(loc('commandreader.py'),
                               {'attrib-starts': [('__main|0|',
        120)],
                                'code-line': '        while True:\r\n',
                                'first-line': 50L,
                                'folded-linenos': [],
                                'sel-line': 154L,
                                'sel-line-start': 4672L,
                                'selection_end': 4691L,
                                'selection_start': 4691L,
                                'zoom': 0L}),
                              (loc('getports.py'),
                               {'attrib-starts': [],
                                'code-line': '# from typing import Any, Unio'\
        'n, Tuple, Callable, TypeVar, Generic, Sequence, Mapping, List, Dict'\
        ', Set, Deque, Iterable\r\n',
                                'first-line': 0L,
                                'folded-linenos': [],
                                'sel-line': 3L,
                                'sel-line-start': 55L,
                                'selection_end': 174L,
                                'selection_start': 174L,
                                'zoom': 0L}),
                              (loc('knowncontrollers.py'),
                               {'attrib-starts': [('select_controller|0|',
        52)],
                                'code-line': 'def select_controller(_str: st'\
        'r) -> Tuple[str, Any]:\r\n',
                                'first-line': 33L,
                                'folded-linenos': [],
                                'sel-line': 52L,
                                'sel-line-start': 1594L,
                                'selection_end': 1630L,
                                'selection_start': 1630L,
                                'zoom': 0L}),
                              (loc('tests/test_updatetime.py'),
                               {'attrib-starts': [('Testupdatetime|0|',
        15),
        ('Testupdatetime|0|.testdoit|0|',
         324)],
                                'code-line': '        devs: List[str] = getp'\
        'orts.GetPorts().get()\r\n',
                                'first-line': 140L,
                                'folded-linenos': [],
                                'sel-line': 326L,
                                'sel-line-start': 11423L,
                                'selection_end': 11471L,
                                'selection_start': 11468L,
                                'zoom': 0L}),
                              (loc('updatetime.py'),
                               {'attrib-starts': [('main|0|',
        242)],
                                'code-line': '    stuff = Stuff(process_cmdl'\
        'ine(getports.GetPorts().get()))\r\n',
                                'first-line': 149L,
                                'folded-linenos': [],
                                'sel-line': 254L,
                                'sel-line-start': 8803L,
                                'selection_end': 8820L,
                                'selection_start': 8815L,
                                'zoom': -1L}),
                              (loc('updatetime_aux.py'),
                               {'attrib-starts': [('process_cmdline|0|',
        210)],
                                'code-line': '            raise Exception(ms'\
        'g)\r\n',
                                'first-line': 234L,
                                'folded-linenos': [],
                                'sel-line': 258L,
                                'sel-line-start': 8282L,
                                'selection_end': 8314L,
                                'selection_start': 8314L,
                                'zoom': 0L}),
                              (loc('utils.py'),
                               {'attrib-starts': [('Utils|0|',
        35),
        ('Utils|0|.doacr|0|',
         189)],
                                'code-line': "                command = \" "\
        "\".join([cmd, f'{_:03d}', pram])\r\n",
                                'first-line': 0L,
                                'folded-linenos': [],
                                'sel-line': 275L,
                                'sel-line-start': 9617L,
                                'selection_end': 9640L,
                                'selection_start': 9633L,
                                'zoom': 0L})],
        'has-focus': True,
        'locked': False},
        [loc('commandreader.py'),
         loc('getports.py'),
         loc('knowncontrollers.py'),
         loc('tests/test_updatetime.py'),
         loc('updatetime.py'),
         loc('updatetime_aux.py'),
         loc('utils.py')]),
                               'open_files': [u'commandreader.py',
        u'knowncontrollers.py',
        u'updatetime.py',
        u'updatetime_aux.py',
        u'tests/test_updatetime.py',
        u'getports.py',
        u'utils.py']},
        'saved_notebook_display': None,
        'split_percents': {0: 0.5248474280732345},
        'splits': 2,
        'tab_location': 'top',
        'traversal_pos': ((0,
                           7),
                          1604093479.103),
        'user_data': {}},
                 'saved_notebook_display': None,
                 'split_percents': {0: 0.5},
                 'splits': 2,
                 'tab_location': 'left',
                 'traversal_pos': ((0,
                                    4),
                                   1605075147.255),
                 'user_data': {}},
        'window-alloc': (158,
                         0,
                         1694,
                         1189)}]}
guimgr.recent-documents = [loc('utils.py'),
                           loc('getports.py'),
                           loc('tests/test_updatetime.py'),
                           loc('updatetime_aux.py')]
guimgr.visual-state = {loc('file:C:/Program Files (x86)/Wing IDE 6.0/src/testing/runners/run_unittests_xml.py'): {'a'\
        'ttrib-starts': [('RunInSingleDir',
                          151)],
        'first-line': 140L,
        'folded-linenos': [],
        'sel-line': 173L,
        'sel-line-start': 6247L,
        'selection_end': 6247L,
        'selection_start': 6247L,
        'zoom': 0L},
                       loc('file:C:/Program Files (x86)/Wing IDE 6.0/src/testing/runners/wingtest_common.py'): {'a'\
        'ttrib-starts': [('XmlStream',
                          83),
                         ('XmlStream.write',
                          123)],
        'first-line': 86L,
        'folded-linenos': [],
        'sel-line': 125L,
        'sel-line-start': 3918L,
        'selection_end': 3918L,
        'selection_start': 3918L,
        'zoom': 0L},
                       loc('file:C:/Program Files (x86)/Wing Pro 7.0/src/testing/runners/wingtest_common.py'): {'a'\
        'ttrib-starts': [('XmlStream|0|',
                          83),
                         ('XmlStream|0|.write|0|',
                          123)],
        'code-line': '        self._acquire_writing_lock()\r\n',
        'first-line': 95L,
        'folded-linenos': [],
        'sel-line': 125L,
        'sel-line-start': 3918L,
        'selection_end': 3918L,
        'selection_start': 3918L,
        'zoom': 0L},
                       loc('file:C:/Program Files/Python37/Lib/codecs.py'): {'a'\
        'ttrib-starts': [('BufferedIncrementalDecoder|0|',
                          302),
                         ('BufferedIncrementalDecoder|0|.decode|0|',
                          318)],
        'code-line': '        data = self.buffer + input\r\n',
        'first-line': 292L,
        'folded-linenos': [],
        'sel-line': 320L,
        'sel-line-start': 11093L,
        'selection_end': 11093L,
        'selection_start': 11093L,
        'zoom': 0L},
                       loc('file:C:/Program Files/Python37/Lib/importlib/_bootstrap.py'): {'a'\
        'ttrib-starts': [('_find_and_load|0|',
                          977)],
        'code-line': '            return _find_and_load_unlocked(name, impor'\
                     't_)\r\n',
        'first-line': 942L,
        'folded-linenos': [],
        'sel-line': 982L,
        'sel-line-start': 33394L,
        'selection_end': 33394L,
        'selection_start': 33394L,
        'zoom': 0L},
                       loc('file:C:/Program Files/Python37/Lib/importlib/_bootstrap_external.py'): {'a'\
        'ttrib-starts': [('_LoaderBasics|0|',
                          705),
                         ('_LoaderBasics|0|.exec_module|0|',
                          721)],
        'code-line': '        _bootstrap._call_with_frames_removed(exec, cod'\
                     'e, module.__dict__)\r\n',
        'first-line': 685L,
        'folded-linenos': [],
        'sel-line': 727L,
        'sel-line-start': 28726L,
        'selection_end': 28726L,
        'selection_start': 28726L,
        'zoom': 0L},
                       loc('file:C:/Program Files/Python37/Lib/logging/__init__.py'): {'a'\
        'ttrib-starts': [('FileHandler|0|',
                          1069),
                         ('FileHandler|0|._open|0|',
                          1115)],
        'code-line': '        return open(self.baseFilename, self.mode, enco'\
                     'ding=self.encoding)\r\n',
        'first-line': 1078L,
        'folded-linenos': [],
        'sel-line': 1120L,
        'sel-line-start': 41001L,
        'selection_end': 41001L,
        'selection_start': 41001L,
        'zoom': 0L},
                       loc('file:C:/Program Files/Python37/Lib/logging/handlers.py'): {'a'\
        'ttrib-starts': [('RotatingFileHandler|0|',
                          113),
                         ('RotatingFileHandler|0|.__init__|0|',
                          118)],
        'code-line': '        BaseRotatingHandler.__init__(self, filename, m'\
                     'ode, encoding, delay)\r\n',
        'first-line': 111L,
        'folded-linenos': [],
        'sel-line': 146L,
        'sel-line-start': 6035L,
        'selection_end': 6035L,
        'selection_start': 6035L,
        'zoom': 0L},
                       loc('file:C:/Program Files/Python37/Lib/unittest/case.py'): {'a'\
        'ttrib-starts': [],
        'code-line': '',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('file:C:/Program Files/Python37/Lib/unittest/loader.py'): {'a'\
        'ttrib-starts': [('_FailedTest|0|',
                          22),
                         ('_FailedTest|0|.__getattr__|0|',
                          29),
                         ('_FailedTest|0|.__getattr__|0|.testFailure|0|',
                          32)],
        'code-line': '            raise self._exception\r\n',
        'first-line': 28L,
        'folded-linenos': [],
        'sel-line': 33L,
        'sel-line-start': 794L,
        'selection_end': 794L,
        'selection_start': 794L,
        'zoom': 0L},
                       loc('file:C:/Program Files/Python37/Lib/unittest/suite.py'): {'a'\
        'ttrib-starts': [('BaseTestSuite|0|',
                          15),
                         ('BaseTestSuite|0|.__call__|0|',
                          82)],
        'code-line': '        return self.run(*args, **kwds)\r\n',
        'first-line': 44L,
        'folded-linenos': [],
        'sel-line': 83L,
        'sel-line-start': 2520L,
        'selection_end': 2520L,
        'selection_start': 2520L,
        'zoom': 0L},
                       loc('file:C:/Program Files/Python38/Lib/codecs.py'): {'a'\
        'ttrib-starts': [('IncrementalDecoder|0|',
                          253),
                         ('IncrementalDecoder|0|.setstate|0|',
                          294)],
        'code-line': '        """\r\n',
        'first-line': 262L,
        'folded-linenos': [],
        'sel-line': 295L,
        'sel-line-start': 10139L,
        'selection_end': 10139L,
        'selection_start': 10139L,
        'zoom': 0L},
                       loc('file:C:/Program Files/Python38/Lib/collections/__init__.py'): {'a'\
        'ttrib-starts': [('namedtuple|0|',
                          312)],
        'code-line': "            raise ValueError('Type names and field nam"\
                     "es must be valid '\r\n",
        'first-line': 334L,
        'folded-linenos': [],
        'sel-line': 357L,
        'sel-line-start': 13141L,
        'selection_end': 13141L,
        'selection_start': 13141L,
        'zoom': 0L},
                       loc('file:C:/Program Files/Python38/Lib/encodings/cp1252.py'): {'a'\
        'ttrib-starts': [('IncrementalDecoder|0|',
                          20),
                         ('IncrementalDecoder|0|.decode|0|',
                          21)],
        'code-line': '        return codecs.charmap_decode(input,self.errors'\
                     ',decoding_table)[0]\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 22L,
        'sel-line-start': 696L,
        'selection_end': 696L,
        'selection_start': 696L,
        'zoom': 0L},
                       loc('file:C:/Program Files/Python38/Lib/unittest/case.py'): {'a'\
        'ttrib-starts': [('TestCase|0|',
                          374),
                         ('TestCase|0|.fail|0|',
                          750)],
        'code-line': '        raise self.failureException(msg)\r\n',
        'first-line': 728L,
        'folded-linenos': [],
        'sel-line': 752L,
        'sel-line-start': 27685L,
        'selection_end': 27685L,
        'selection_start': 27685L,
        'zoom': 0L},
                       loc('file:C:/Program Files/Python38/Lib/unittest/loader.py'): {'a'\
        'ttrib-starts': [],
        'code-line': '\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 13L,
        'sel-line-start': 208L,
        'selection_end': 208L,
        'selection_start': 208L,
        'zoom': 0L},
                       loc('file:C:/Program Files/Python38/Lib/unittest/main.py'): {'a'\
        'ttrib-starts': [('TestProgram|0|',
                          54),
                         ('TestProgram|0|.__init__|0|',
                          64)],
        'code-line': '        self.runTests()\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 100L,
        'sel-line-start': 3773L,
        'selection_end': 3773L,
        'selection_start': 3773L,
        'zoom': 0L},
                       loc('file:C:/Python34/Lib/argparse.py'): {'attrib-sta'\
        'rts': [('ArgumentParser',
                 1581),
                ('ArgumentParser.exit',
                 2369)],
        'first-line': 2294L,
        'folded-linenos': [],
        'sel-line': 2372L,
        'sel-line-start': 91929L,
        'selection_end': 91929L,
        'selection_start': 91929L,
        'zoom': 0L},
                       loc('file:C:/Python34/Lib/ntpath.py'): {'attrib-start'\
        's': [('relpath',
               561)],
        'first-line': 446L,
        'folded-linenos': [],
        'sel-line': 578L,
        'sel-line-start': 19494L,
        'selection_end': 19494L,
        'selection_start': 19494L,
        'zoom': 0L},
                       loc('file:C:/Python34/Lib/unittest/case.py'): {'attri'\
        'b-starts': [('TestCase',
                      315),
                     ('TestCase.assertTrue',
                      652)],
        'first-line': 616L,
        'folded-linenos': [],
        'sel-line': 656L,
        'sel-line-start': 24204L,
        'selection_end': 24204L,
        'selection_start': 24204L,
        'zoom': 0L},
                       loc('file:C:/Python34/Lib/unittest/main.py'): {'attri'\
        'b-starts': [('TestProgram',
                      47),
                     ('TestProgram.runTests',
                      226)],
        'first-line': 175L,
        'folded-linenos': [],
        'sel-line': 245L,
        'sel-line-start': 9930L,
        'selection_end': 9930L,
        'selection_start': 9930L,
        'zoom': 0L},
                       loc('file:C:/Python34/Lib/unittest/suite.py'): {'attr'\
        'ib-starts': [('BaseTestSuite',
                       15),
                      ('BaseTestSuite.__call__',
                       85)],
        'first-line': 81L,
        'folded-linenos': [],
        'sel-line': 86L,
        'sel-line-start': 2585L,
        'selection_end': 2585L,
        'selection_start': 2585L,
        'zoom': 0L},
                       loc('file:C:/Python34/lib/unittest/loader.py'): {'att'\
        'rib-starts': [('TestLoader',
                        61),
                       ('TestLoader.loadTestsFromName',
                        101)],
        'first-line': 96L,
        'folded-linenos': [],
        'sel-line': 124L,
        'sel-line-start': 4404L,
        'selection_end': 4404L,
        'selection_start': 4404L,
        'zoom': 0L},
                       loc('file:C:/Python34/lib/xml/dom/minidom.py'): {'att'\
        'rib-starts': [('CharacterData',
                        992),
                       ('CharacterData._get_data',
                        1005)],
        'first-line': 985L,
        'folded-linenos': [],
        'sel-line': 1006L,
        'sel-line-start': 33959L,
        'selection_end': 33959L,
        'selection_start': 33959L,
        'zoom': 0L},
                       loc('file:C:/Users/Dan/AppData/Local/Programs/Python/python36-32/Lib/unittest/case.py'): {'a'\
        'ttrib-starts': [('TestCase',
                          340),
                         ('TestCase.assertTrue',
                          677)],
        'first-line': 663L,
        'folded-linenos': [],
        'sel-line': 681L,
        'sel-line-start': 25336L,
        'selection_end': 25336L,
        'selection_start': 25336L,
        'zoom': 0L},
                       loc('file:C:/Users/Dan/AppData/Roaming/Wing IDE 6/pylintpanel.cfg'): {'a'\
        'ttrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 28L,
        'sel-line-start': 849L,
        'selection_end': 849L,
        'selection_start': 849L,
        'zoom': 0L},
                       loc('file:C:/Users/Dan/AppData/Roaming/Wing Pro 7/updates/7.2.6.0/src/testing/runners/run_unittests_xml.py'): {'a'\
        'ttrib-starts': [],
        'code-line': '    main(list(sys.argv))\n',
        'first-line': 142L,
        'folded-linenos': [],
        'sel-line': 176L,
        'sel-line-start': 6144L,
        'selection_end': 6144L,
        'selection_start': 6144L,
        'zoom': 0L},
                       loc('file:C:/Users/Dan/AppData/Roaming/Wing Pro 7/updates/7.2.6.0/src/testing/runners/wingtest_common.py'): {'a'\
        'ttrib-starts': [('XmlTestRunner|0|',
                          597),
                         ('XmlTestRunner|0|.run|0|',
                          608)],
        'code-line': '        stopTime = time.time()\n',
        'first-line': 577L,
        'folded-linenos': [],
        'sel-line': 613L,
        'sel-line-start': 20085L,
        'selection_end': 20085L,
        'selection_start': 20085L,
        'zoom': 0L},
                       loc('file:C:/Users/Dan/Envs/p34/Lib/codecs.py'): {'at'\
        'trib-starts': [('BufferedIncrementalDecoder',
                         299),
                        ('BufferedIncrementalDecoder.getstate',
                         327)],
        'first-line': 292L,
        'folded-linenos': [],
        'sel-line': 329L,
        'sel-line-start': 11368L,
        'selection_end': 11368L,
        'selection_start': 11368L,
        'zoom': 0L},
                       loc('file:C:/Users/Dan/Envs/p34/Lib/site-packages/serial/serialwin32.py'): {'a'\
        'ttrib-starts': [('Win32Serial',
                          21),
                         ('Win32Serial.__init__',
                          27)],
        'first-line': 26L,
        'folded-linenos': [],
        'sel-line': 30L,
        'sel-line-start': 855L,
        'selection_end': 891L,
        'selection_start': 891L,
        'zoom': 0L},
                       loc('file:c:/Python34/Lib/codecs.py'): {'attrib-start'\
        's': [('BufferedIncrementalDecoder',
               293),
              ('BufferedIncrementalDecoder.decode',
               309)],
        'first-line': 284L,
        'folded-linenos': [],
        'sel-line': 311L,
        'sel-line-start': 10605L,
        'selection_end': 10605L,
        'selection_start': 10605L,
        'zoom': 0L},
                       loc('file:c:/Python34/Lib/sre_parse.py'): {'attrib-st'\
        'arts': [('_parse',
                  447)],
        'first-line': 507L,
        'folded-linenos': [],
        'sel-line': 585L,
        'sel-line-start': 20161L,
        'selection_end': 20161L,
        'selection_start': 20161L,
        'zoom': 0L},
                       loc('file:c:/users/dan/appdata/local/programs/python/python36-32/Lib/unittest/loader.py'): {'a'\
        'ttrib-starts': [('_FailedTest',
                          22),
                         ('_FailedTest.__getattr__',
                          29),
                         ('_FailedTest.__getattr__.testFailure',
                          32)],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 33L,
        'sel-line-start': 781L,
        'selection_end': 781L,
        'selection_start': 781L,
        'zoom': 0L},
                       loc('file:c:/users/dan/appdata/local/programs/python/python36-32/Lib/unittest/suite.py'): {'a'\
        'ttrib-starts': [('TestSuite',
                          91),
                         ('TestSuite.run',
                          101)],
        'first-line': 86L,
        'folded-linenos': [],
        'sel-line': 125L,
        'sel-line-start': 4044L,
        'selection_end': 4044L,
        'selection_start': 4044L,
        'zoom': 0L},
                       loc('../Python Scripts/removeTrailSpacesonLines.py'): {'a'\
        'ttrib-starts': [('__main',
                          12)],
        'first-line': 41L,
        'folded-linenos': [],
        'sel-line': 86L,
        'sel-line-start': 2738L,
        'selection_end': 2738L,
        'selection_start': 2738L,
        'zoom': 0L},
                       loc('../Python Scripts/removeTrailSpacesonLines.py.bak'): {'a'\
        'ttrib-starts': [('__main',
                          13)],
        'first-line': 49L,
        'folded-linenos': [],
        'sel-line': 56L,
        'sel-line-start': 1848L,
        'selection_end': 1875L,
        'selection_start': 1875L,
        'zoom': 0L},
                       loc('../Python Scripts/removeTrailSpacesonLines.py.bak.py'): {'a'\
        'ttrib-starts': [('__main',
                          13)],
        'first-line': 33L,
        'folded-linenos': [],
        'sel-line': 64L,
        'sel-line-start': 2080L,
        'selection_end': 2122L,
        'selection_start': 2122L,
        'zoom': 0L},
                       loc('../deleteme.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 3L,
        'sel-line-start': 80L,
        'selection_end': 109L,
        'selection_start': 109L,
        'zoom': 0L},
                       loc('.gitignore'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 8L,
        'sel-line-start': 164L,
        'selection_end': 166L,
        'selection_start': 166L,
        'zoom': 0L},
                       loc('MANIFEST.in'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 1L,
        'sel-line-start': 20L,
        'selection_end': 20L,
        'selection_start': 20L,
        'zoom': 0L},
                       loc('README.rst'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 51L,
        'selection_start': 51L,
        'zoom': 0L},
                       loc('README.txt'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 10L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('Repeater.py'): {'attrib-starts': [('main|0|',
        126)],
        'code-line': '    _ui.request()\r\n',
        'first-line': 116L,
        'folded-linenos': [],
        'sel-line': 140L,
        'sel-line-start': 3428L,
        'selection_end': 3443L,
        'selection_start': 3436L,
        'zoom': 0L},
                       loc('club.py'): {'attrib-starts': [('Device|0|',
        10),
        ('Device|0|.fmtRMC|0|',
         135)],
        'code-line': '                _jj.append(_d.get("full") + " percent '\
                     'full")\r\n',
        'first-line': 159L,
        'folded-linenos': [],
        'sel-line': 158L,
        'sel-line-start': 6016L,
        'selection_end': 6076L,
        'selection_start': 6076L,
        'zoom': 0L},
                       loc('cmdfilebuilder.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('cmdreadertest.txt'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 6L,
        'sel-line-start': 104L,
        'selection_end': 132L,
        'selection_start': 132L,
        'zoom': 0L},
                       loc('command_line.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 1L,
        'sel-line-start': 24L,
        'selection_end': 24L,
        'selection_start': 24L,
        'zoom': 0L},
                       loc('commandreader.py'): {'attrib-starts': [],
        'code-line': '# backupCount=5,\r\n',
        'first-line': 28L,
        'folded-linenos': [],
        'sel-line': 22L,
        'sel-line-start': 562L,
        'selection_end': 578L,
        'selection_start': 578L,
        'zoom': 0L},
                       loc('controller.py'): {'attrib-starts': [('Controller'\
        '|0|',
        40),
        ('Controller|0|.open|0|',
         127)],
        'code-line': '        return result\r\n',
        'first-line': 175L,
        'folded-linenos': [],
        'sel-line': 167L,
        'sel-line-start': 5806L,
        'selection_end': 5826L,
        'selection_start': 5826L,
        'zoom': 0L},
                       loc('controllerspecific.py'): {'attrib-starts': [],
        'code-line': 'REPL_FMT = 2\r\n',
        'first-line': 72L,
        'folded-linenos': [],
        'sel-line': 15L,
        'sel-line-start': 385L,
        'selection_end': 393L,
        'selection_start': 385L,
        'zoom': -1L},
                       loc('deleteme.txt'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 5L,
        'sel-line-start': 135L,
        'selection_end': 135L,
        'selection_start': 135L,
        'zoom': 0L},
                       loc('dlxii.py'): {'attrib-starts': [('Device|0|',
        93),
        ('Device|0|.fmtRCM|0|',
         212)],
        'code-line': '        _d: Dict[str, Any] = _fmt_n011(_str)\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 222L,
        'sel-line-start': 7410L,
        'selection_end': 7431L,
        'selection_start': 7431L,
        'zoom': 0L},
                       loc('getports.py'): {'attrib-starts': [('GetPorts|0|',
        16),
        ('GetPorts|0|.__init__|0|',
         28)],
        'code-line': "        LOGGER.debug('Created GetPorts')\r\n",
        'first-line': 18L,
        'folded-linenos': [],
        'sel-line': 30L,
        'sel-line-start': 846L,
        'selection_end': 886L,
        'selection_start': 886L,
        'zoom': 0L},
                       loc('irlp en check code.txt'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 39L,
        'sel-line-start': 659L,
        'selection_end': 661L,
        'selection_start': 661L,
        'zoom': 0L},
                       loc('knowncontrollers.py'): {'attrib-starts': [('sele'\
        'ct_controller|0|',
        52)],
        'code-line': '    for _n in _CTRL_DICT_A.values():\r\n',
        'first-line': 32L,
        'folded-linenos': [],
        'sel-line': 60L,
        'sel-line-start': 1902L,
        'selection_end': 1928L,
        'selection_start': 1916L,
        'zoom': 0L},
                       loc('learn.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 11L,
        'sel-line-start': 633L,
        'selection_end': 723L,
        'selection_start': 633L,
        'zoom': 0L},
                       loc('myserial.py'): {'attrib-starts': [],
        'code-line': 'from typing import Any, Union, Tuple, Callable, TypeVa'\
                     'r, Generic, Sequence, Mapping, List, Dict, Set, Deque,'\
                     ' Iterable\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 4L,
        'sel-line-start': 92L,
        'selection_end': 209L,
        'selection_start': 209L,
        'zoom': 0L},
                       loc('mytest.py'): {'attrib-starts': [('testthrow',
        2)],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 2L,
        'sel-line-start': 4L,
        'selection_end': 11L,
        'selection_start': 11L,
        'zoom': 0L},
                       loc('pysysconfig.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('removeTrailSpacesonLines.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 5L,
        'sel-line-start': 163L,
        'selection_end': 172L,
        'selection_start': 172L,
        'zoom': 0L},
                       loc('rlc1plus.py'): {'attrib-starts': [],
        'code-line': 'from typing import Any, Union, Tuple, Callable, TypeVa'\
                     'r, Generic, Sequence, Mapping, List, Dict, Set, Deque,'\
                     ' Iterable\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 4L,
        'sel-line-start': 56L,
        'selection_end': 173L,
        'selection_start': 173L,
        'zoom': 0L},
                       loc('setup.cfg'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 4L,
        'sel-line-start': 245L,
        'selection_end': 246L,
        'selection_start': 246L,
        'zoom': 0L},
                       loc('setup.py'): {'attrib-starts': [],
        'code-line': '    # See https://pypi.python.org/pypi?%3Aaction=list_'\
                     'classifiers\r\n',
        'first-line': 18L,
        'folded-linenos': [],
        'sel-line': 40L,
        'sel-line-start': 1143L,
        'selection_end': 1182L,
        'selection_start': 1182L,
        'zoom': 0L},
                       loc('test.cmdlog.txt'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('test.exelog.txt'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 360L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('test.txt'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 116L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('test_commandreader.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 4L,
        'sel-line-start': 63L,
        'selection_end': 223L,
        'selection_start': 63L,
        'zoom': 0L},
                       loc('test_controller.py'): {'attrib-starts': [('TestC'\
        'ontroller',
        19),
        ('TestController.tearDown',
         31)],
        'first-line': 6L,
        'folded-linenos': [],
        'sel-line': 33L,
        'sel-line-start': 748L,
        'selection_end': 787L,
        'selection_start': 787L,
        'zoom': 0L},
                       loc('test_dlxii.py'): {'attrib-starts': [],
        'first-line': 12L,
        'folded-linenos': [],
        'sel-line': 7L,
        'sel-line-start': 117L,
        'selection_end': 129L,
        'selection_start': 129L,
        'zoom': 0L},
                       loc('test_myserial.py'): {'attrib-starts': [('TestMyS'\
        'erial',
        23),
        ('TestMySerial.setUpClass',
         45)],
        'first-line': 21L,
        'folded-linenos': [],
        'sel-line': 51L,
        'sel-line-start': 1217L,
        'selection_end': 1217L,
        'selection_start': 1217L,
        'zoom': 0L},
                       loc('test_userinput.py'): {'attrib-starts': [('Testus'\
        'erinput',
        14),
        ('Testuserinput.testrequest',
         106)],
        'first-line': 69L,
        'folded-linenos': [],
        'sel-line': 106L,
        'sel-line-start': 3475L,
        'selection_end': 3531L,
        'selection_start': 3531L,
        'zoom': 0L},
                       loc('test_utils.py'): {'attrib-starts': [('Testutils',
        15),
        ('Testutils.testprocessLoop',
         63)],
        'first-line': 29L,
        'folded-linenos': [],
        'sel-line': 67L,
        'sel-line-start': 1811L,
        'selection_end': 1836L,
        'selection_start': 1825L,
        'zoom': 0L},
                       loc('testcontroller.exelog.txt'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('testplay.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 11L,
        'sel-line-start': 156L,
        'selection_end': 156L,
        'selection_start': 156L,
        'zoom': 0L},
                       loc('tests/__init__.py'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('tests/cmdreadertest.txt'): {'attrib-starts': [],
        'code-line': 'the last line no trailing cr',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 6L,
        'sel-line-start': 104L,
        'selection_end': 132L,
        'selection_start': 132L,
        'zoom': 0L},
                       loc('tests/cmt_test_1.txt'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 4L,
        'sel-line-start': 87L,
        'selection_end': 100L,
        'selection_start': 100L,
        'zoom': 0L},
                       loc('tests/cmt_test_2.txt'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 8L,
        'sel-line-start': 170L,
        'selection_end': 196L,
        'selection_start': 196L,
        'zoom': 0L},
                       loc('tests/cmt_test_3.txt'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 2L,
        'sel-line-start': 31L,
        'selection_end': 35L,
        'selection_start': 35L,
        'zoom': 0L},
                       loc('tests/cmt_test_4.txt'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('tests/cmt_test_5.txt'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 4L,
        'selection_start': 4L,
        'zoom': 0L},
                       loc('tests/context.py'): {'attrib-starts': [],
        'code-line': '#import controller\r\n',
        'first-line': 1L,
        'folded-linenos': [],
        'sel-line': 9L,
        'sel-line-start': 168L,
        'selection_end': 186L,
        'selection_start': 186L,
        'zoom': 0L},
                       loc('tests/md_test_1.txt'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 14L,
        'sel-line-start': 214L,
        'selection_end': 214L,
        'selection_start': 214L,
        'zoom': 0L},
                       loc('tests/test.cmdlog.txt'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('tests/test_cmdfilebuilder.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('tests/test_commandreader.py'): {'attrib-starts': [('T'\
        'estCommandreader|0|',
        22),
        ('TestCommandreader|0|.test0_inst|0|',
         41)],
        'code-line': "        eres = '[CommandReader closed: True, [UserInpu"\
                     "t: , cmdreadertest.txt]]'\r\n",
        'first-line': 38L,
        'folded-linenos': [],
        'sel-line': 43L,
        'sel-line-start': 889L,
        'selection_end': 889L,
        'selection_start': 889L,
        'zoom': -1L},
                       loc('tests/test_controller.py'): {'attrib-starts': [('T'\
        'estController|0|',
        22),
        ('TestController|0|.testsendcmd|0|',
         155)],
        'code-line': "        self.assertTrue(c.atts['last_response'].find("\
                     "\"E R R O R\") > 0)\r\n",
        'first-line': 197L,
        'folded-linenos': [],
        'sel-line': 180L,
        'sel-line-start': 5945L,
        'selection_end': 5994L,
        'selection_start': 5992L,
        'zoom': 0L},
                       loc('tests/test_controllerspecific.py'): {'attrib-sta'\
        'rts': [('TestControllerspecific|0|',
                 11),
                ('TestControllerspecific|0|.testcreation|0|',
                 28)],
        'code-line': "        self.assertEqual('[CPS: 960, 0.215]', str(cps0"\
                     "))\r\n",
        'first-line': 11L,
        'folded-linenos': [],
        'sel-line': 35L,
        'sel-line-start': 769L,
        'selection_end': 769L,
        'selection_start': 769L,
        'zoom': 0L},
                       loc('tests/test_dlxii.py'): {'attrib-starts': [('Test'\
        'Controllerspecific|0|',
        9),
        ('TestControllerspecific|0|.testfmt_rcm|0|',
         147)],
        'code-line': '\r\n',
        'first-line': 125L,
        'folded-linenos': [],
        'sel-line': 162L,
        'sel-line-start': 4949L,
        'selection_end': 4949L,
        'selection_start': 4949L,
        'zoom': 0L},
                       loc('tests/test_getports.py'): {'attrib-starts': [('T'\
        'estGetPorts|0|',
        9),
        ('TestGetPorts|0|.testall|0|',
         25)],
        'code-line': '        print(getports.GetPorts().get())\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 26L,
        'sel-line-start': 418L,
        'selection_end': 418L,
        'selection_start': 418L,
        'zoom': 0L},
                       loc('tests/test_knowncontrollers.py'): {'attrib-start'\
        's': [('TestKnownControllers|0|',
               11),
              ('TestKnownControllers|0|.test_getcontrollerids|0|',
               33)],
        'code-line': '        exp = ["club", "dlxii", "rlc1plus"]\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 35L,
        'sel-line-start': 733L,
        'selection_end': 733L,
        'selection_start': 733L,
        'zoom': 0L},
                       loc('tests/test_myserial.py'): {'attrib-starts': [('T'\
        'estMySerial|0|',
        21),
        ('TestMySerial|0|.testfindBaud|0|',
         86)],
        'code-line': '        self.assertTrue(sp.find_baud_rate())\r\n',
        'first-line': 119L,
        'folded-linenos': [],
        'sel-line': 111L,
        'sel-line-start': 2987L,
        'selection_end': 3015L,
        'selection_start': 3013L,
        'zoom': 0L},
                       loc('tests/test_updatetime.py'): {'attrib-starts': [],
        'code-line': '#import context\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 6L,
        'sel-line-start': 79L,
        'selection_end': 80L,
        'selection_start': 80L,
        'zoom': 0L},
                       loc('tests/test_userinput.py'): {'attrib-starts': [('e'\
        'print|0|',
        16)],
        'code-line': '    print(*args, file=sys.stderr, **kwargs)\r\n',
        'first-line': 15L,
        'folded-linenos': [],
        'sel-line': 20L,
        'sel-line-start': 331L,
        'selection_end': 357L,
        'selection_start': 356L,
        'zoom': 0L},
                       loc('tests/test_utils.py'): {'attrib-starts': [('Test'\
        'utils|0|',
        21),
        ('Testutils|0|.teststr|0|',
         110)],
        'code-line': '        """\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 139L,
        'sel-line-start': 4338L,
        'selection_end': 4343L,
        'selection_start': 4343L,
        'zoom': 0L},
                       loc('updatetime.py'): {'attrib-starts': [],
        'code-line': 'from typing import Any, Union, Tuple, Callable, TypeVa'\
                     'r, Generic, Sequence, Mapping, List, Dict, Set, Deque,'\
                     ' Iterable\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 4L,
        'sel-line-start': 103L,
        'selection_end': 220L,
        'selection_start': 220L,
        'zoom': -1L},
                       loc('updatetime_aux.py'): {'attrib-starts': [],
        'code-line': 'from typing import Any, Union, Tuple, Callable, TypeVa'\
                     'r, Generic, Sequence, Mapping, List, Dict, Set, Deque,'\
                     ' Iterable\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 3L,
        'sel-line-start': 92L,
        'selection_end': 209L,
        'selection_start': 209L,
        'zoom': 0L},
                       loc('userinput.py'): {'attrib-starts': [('UserInput|0'\
        '|',
        42),
        ('UserInput|0|.request|0|',
         95)],
        'code-line': "        CtrlStrings = namedtuple('CtrlStrings', ['org'"\
                     ", 'lc'])\r\n",
        'first-line': 84L,
        'folded-linenos': [],
        'sel-line': 100L,
        'sel-line-start': 3240L,
        'selection_end': 3248L,
        'selection_start': 3248L,
        'zoom': 0L},
                       loc('utils.py'): {'attrib-starts': [('Utils|0|',
        35),
        ('Utils|0|.reset_cmd_names|0|',
         294)],
        'code-line': "                print('sending {0}{1}{1}'\r\n",
        'first-line': 279L,
        'folded-linenos': [],
        'sel-line': 308L,
        'sel-line-start': 10831L,
        'selection_end': 10861L,
        'selection_start': 10861L,
        'zoom': 0L},
                       loc('x-wingide-zip://C:/Python34/lib/site-packages/pyserial-3.4-py3.4.egg//'): {'a'\
        'ttrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('x-wingide-zip://C:/Python34/lib/site-packages/pyserial-3.4-py3.4.egg//serial/serialposix.py'): {'a'\
        'ttrib-starts': [],
        'first-line': 12L,
        'folded-linenos': [],
        'sel-line': 38L,
        'sel-line-start': 1225L,
        'selection_end': 1265L,
        'selection_start': 1255L,
        'zoom': 0L},
                       loc('x-wingide-zip://C:/Python34/lib/site-packages/pyserial-3.4-py3.4.egg//serial/serialutil.py'): {'a'\
        'ttrib-starts': [('SerialBase',
                          160),
                         ('SerialBase.__repr__',
                          522)],
        'first-line': 504L,
        'folded-linenos': [],
        'sel-line': 522L,
        'sel-line-start': 16841L,
        'selection_end': 16851L,
        'selection_start': 16849L,
        'zoom': 0L},
                       loc('x-wingide-zip://C:/Python34/lib/site-packages/pyserial-3.4-py3.4.egg//serial/serialwin32.py'): {'a'\
        'ttrib-starts': [('Serial',
                          20),
                         ('Serial.open',
                          32)],
        'first-line': 33L,
        'folded-linenos': [],
        'sel-line': 61L,
        'sel-line-start': 2197L,
        'selection_end': 2197L,
        'selection_start': 2197L,
        'zoom': 0L}}
proj.auto-rstrip-on-save = 'on-save'
proj.build-cmd = {None: ('default',
                         None)}
proj.env-vars = {None: ('default',
                        [u''])}
proj.indent-style-policy = 'warn'
proj.line-ending-policy = 'convert'
proj.preferred-indent-style = 'spaces-only'
proj.pyexec = {None: ('default',
                      u'c:\\Program Files\\Python38\\python.exe')}
proj.pypath = {None: ('custom',
                      [u'm:\\Python\\Python3_packages\\repeaterControlerDownloader'])}
proj.test-launch-config = {None: ('custom',
                                  (u'',
                                   'launch-0oGIZGDHuny3dmpx'))}
proj.vcs-system-config = ('proj',
                          {'bzr': {'versioncontrol.bzr.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.bzr.executable': u'bzr'},
                           'cvs': {'versioncontrol.cvs.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.cvs.executable': u'cvs',
                                   'versioncontrol.cvs.extra-global-args': '-'\
        'z3'},
                           'git': {'versioncontrol.git.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.git.executable': u'git',
                                   'versioncontrol.git.use-porcelain': True},
                           'hg': {'versioncontrol.hg.active': 'active-if-pro'\
        'ject-dir',
                                  'versioncontrol.hg.dont-find-unregistered': True,
                                  'versioncontrol.hg.executable': u'hg',
                                  'versioncontrol.hg.extra-global-args': '--'\
        'encoding=utf8'},
                           'perforce': {'versioncontrol.perforce.active': 'n'\
        'ot-active',
        'versioncontrol.perforce.dont-find-unregistered': True,
        'versioncontrol.perforce.executable': u'p4',
        'versioncontrol.perforce.extra-global-args': ''},
                           'svn': {'versioncontrol.svn.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.svn.executable': u'svn',
                                   'versioncontrol.svn.extra-global-args': '',
                                   'versioncontrol.svn.svnadmin-executable': u'svnadmin'}})
search.replace-history = [u'= ']
search.search-history = [u'virtual env',
                         u'virtual ',
                         u'v',
                         u'i',
                         u'project properties',
                         u'project p',
                         u'pip',
                         u'Any',
                         u'select_controller',
                         u'%',
                         u'basicConfig',
                         u'isEmpty()',
                         u'knowncon',
                         u'newcmd_dict',
                         u'isOpen',
                         u'cled',
                         u'process_cmdline',
                         u'.open',
                         u'_td',
                         u'input(']
testing.stored-results = (1,
                          [(u'm:\\Python\\Python3_packages\\repeaterControlerDownloader\\tests\\test_dlxii.py',
                            [('TestControllerspecific.testfmtcmd',
                              0,
                              None,
                              '',
                              None,
                              1603683073,
                              119),
                             ('TestControllerspecific.testfmt_rmc',
                              0,
                              None,
                              '',
                              None,
                              1603683073,
                              126),
                             ('TestControllerspecific.testnewcmd_dict',
                              0,
                              None,
                              '',
                              None,
                              1603683073,
                              43),
                             ('TestControllerspecific.testcreation',
                              0,
                              None,
                              '',
                              None,
                              1603683073,
                              27),
                             ('TestControllerspecific.testfmt_rcm',
                              0,
                              None,
                              '',
                              None,
                              1603683073,
                              148)]),
                           (u'm:\\Python\\Python3_packages\\repeaterControlerDownloader\\tests\\test_updatetime.py',
                            [('Testupdatetime.testdoit',
                              0,
                              None,
                              None,
                              None,
                              1603690810,
                              325),
                             ('Testupdatetime.testcheckdate',
                              0,
                              None,
                              '',
                              None,
                              1603690810,
                              87),
                             ('Testupdatetime.testchecktime',
                              0,
                              None,
                              '',
                              None,
                              1603690810,
                              133),
                             ('Testupdatetime.testdelay',
                              0,
                              None,
                              '',
                              None,
                              1603690810,
                              31),
                             ('Testupdatetime.testprocess_cmdline',
                              0,
                              u"usage: run_unittests_xml.py [-h] [-dbg] [-v] [-li] [-ld] Controller [Port]\n\nSets a controller's date and time if needed: a blank argument assumes dlx2 and\none available com port\n\npositional arguments:\n  Controller       Controller type, one of [dlx2, rlc1+] required unless no\n                   arguments\n  Port             Port id if required, if only one open port, that one will\n                   be used\n\noptional arguments:\n  -h, --help       show this help message and exit\n  -dbg, --cldebug  turns off setting the new time\n  -v, --verbose    display detailed messages\n  -li, --loginfo   enable INFO logging\n  -ld, --logdebug  enable DEBUG logging\n\nUseful for running in a cron job\n",
                              '',
                              None,
                              1603690810,
                              392)]),
                           (u'm:\\Python\\Python3_packages\\repeaterControlerDownloader\\tests\\test_commandreader.py',
                            [('TestCommandreader.test3_get',
                              0,
                              None,
                              '',
                              None,
                              1603683073,
                              95),
                             ('TestCommandreader.test1_open',
                              0,
                              u"[Errno 2] No such file or directory: 'totaljunk.txt'\n",
                              '',
                              None,
                              1603683073,
                              48),
                             ('TestCommandreader.test0_inst',
                              0,
                              None,
                              '',
                              None,
                              1603683073,
                              42),
                             ('TestCommandreader.test0_close',
                              0,
                              None,
                              '',
                              None,
                              1603683073,
                              86)]),
                           (u'm:\\Python\\Python3_packages\\repeaterControlerDownloader\\tests\\test_getports.py',
                            [('TestGetPorts.testall',
                              0,
                              u"['COM4', 'COM104', 'COM3']\n",
                              '',
                              None,
                              1603683073,
                              26)]),
                           (u'm:\\Python\\Python3_packages\\repeaterControlerDownloader\\tests\\test_knowncontrollers.py',
                            [('TestKnownControllers.test_getcontrollerids',
                              0,
                              None,
                              '',
                              None,
                              1603683073,
                              34),
                             ('TestKnownControllers.test_select_controller',
                              0,
                              None,
                              '',
                              None,
                              1603683073,
                              39),
                             ('TestKnownControllers.test_creation',
                              0,
                              None,
                              '',
                              None,
                              1603683073,
                              28)]),
                           (u'm:\\Python\\Python3_packages\\repeaterControlerDownloader\\tests\\test_myserial.py',
                            [('TestMySerial.testspOK',
                              0,
                              None,
                              '',
                              None,
                              1603683073,
                              75),
                             ('TestMySerial.testfindBaud',
                              0,
                              u'trying 9600 baud\ntrying 9600 baud\ntrying 9600 baud\ntrying 19200 baud\n',
                              '',
                              None,
                              1603683073,
                              86)]),
                           (u'm:\\Python\\Python3_packages\\repeaterControlerDownloader\\tests\\test_userinput.py',
                            [('Testuserinput.testclose',
                              0,
                              None,
                              '',
                              None,
                              1603683073,
                              127),
                             ('Testuserinput.testopen',
                              0,
                              u'trying 9600 baud\ntrying 19200 baud\n',
                              '',
                              None,
                              1603683073,
                              87),
                             ('Testuserinput.testrequest',
                              0,
                              u"Available comport(s) are: ['COM4', 'COM104', 'COM3']\nAvailable comport(s) are: ['COM4', 'COM104', 'COM3']\nAvailable comport(s) are: ['COM4', 'COM104', 'COM3']\nAvailable comport(s) are: ['COM4', 'COM104', 'COM3']\nUsing serial port: COM4\nKnown controllers: \n\tclub\n\tdlxii\n\trlc1plus\nController options: dlx2, rlc1+, rlclub\nController options: dlx2, rlc1+, rlclub\nController options: dlx2, rlc1+, rlclub\nController options: dlx2, rlc1+, rlclub\n",
                              '',
                              None,
                              1603683073,
                              129)]),
                           (u'm:\\Python\\Python3_packages\\repeaterControlerDownloader\\tests\\test_controller.py',
                            [('TestController.test_0inst',
                              0,
                              None,
                              '',
                              None,
                              1603683073,
                              90),
                             ('TestController.testcvntcmd',
                              0,
                              None,
                              '',
                              None,
                              1603683073,
                              142),
                             ('TestController.testB2S',
                              0,
                              None,
                              '',
                              None,
                              1603683073,
                              259),
                             ('TestController.testclose',
                              0,
                              None,
                              '',
                              None,
                              1603683073,
                              127),
                             ('TestController.testS2B',
                              0,
                              None,
                              '',
                              None,
                              1603683073,
                              265),
                             ('TestController.testsendcmd',
                              0,
                              u'ok\nDTMF>\nok\nDTMF>\nok\nDTMF>\nok\nDTMF>\nError: test\nok\nDTMF>******************E R R O R****************\nDTMF>\nneed to handle cmdlog.txt\nok\nDTMF>\nok no filter -- DTMF>\nok no log but display -- DTMF>\nok display but log deselected -- DTMF>\nok format -- DTMF>\n',
                              '',
                              None,
                              1603683073,
                              156),
                             ('TestController.testopen',
                              0,
                              None,
                              '',
                              None,
                              1603683073,
                              99)]),
                           (u'm:\\Python\\Python3_packages\\repeaterControlerDownloader\\tests\\test_utils.py',
                            [('Testutils.testresetCmdNames',
                              0,
                              None,
                              '',
                              None,
                              1603683073,
                              92),
                             ('Testutils.testacr',
                              0,
                              u'Entering apply_command_to_range module\nsending N123 456 \nsending N123 457 \nsending N123 456 \nsending N123 457 \nsending 123 456 \nsending 123 457 \nsending 123 456 a2#*0\nsending 123 457 a2#*0\n',
                              '',
                              None,
                              1603683073,
                              103),
                             ('Testutils.teststr',
                              0,
                              None,
                              '',
                              None,
                              1603683073,
                              111),
                             ('Testutils.testrecallAllNames',
                              0,
                              None,
                              '',
                              None,
                              1603683073,
                              89),
                             ('Testutils.testcreation',
                              0,
                              u'usage: run_unittests_xml.py [-h] [-rmn] [-ran] [-rmd] [-cacn] [-acr] [-q]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -rmn, --recall_macro_names\n                        return all macro names\n  -ran, --recall_all_names\n                        return all renamed commands\n  -rmd, --recall_macro_def\n                        return all macro deffinitions\n  -cacn, --reset_all_comd_names\n                        reset all command names\n  -acr, --apply_command_to_range\n                        apply command to aruments in specified range\n  -q, --quit            quit the util\n',
                              '',
                              None,
                              1603683073,
                              69),
                             ('Testutils.testrecallMacroDeffinitions',
                              0,
                              None,
                              '',
                              None,
                              1603683073,
                              100),
                             ('Testutils.testrecallMacroNames',
                              0,
                              None,
                              '',
                              None,
                              1603683073,
                              86),
                             ('Testutils.testrange_2_list',
                              0,
                              None,
                              '',
                              None,
                              1603683073,
                              142),
                             ('Testutils.testprocessLoop',
                              0,
                              u'commands- one of: (-h|-acr|-rmn|-ran|-rmd|-cacn|-q)\nCommand Complete\nEntering apply_command_to_range module\nsending N123 456 \nsending N123 457 \nsending N123 456 \nsending N123 457 \nsending 123 456 \nsending 123 457 \nsending 123 456 a2#*0\nsending 123 457 a2#*0\nsending N011000\nsending N011001\nsending N011002\nsending N011003\nsending N011004\nsending N011005\nsending N011006\nsending N011007\nsending N011008\nsending N011009\nsending N011010\nsending N011011\nsending N011012\nsending N011013\nsending N011014\nsending N011015\nsending N011016\nsending N011017\nsending N011018\nsending N011019\nsending N011020\nsending N011021\nsending N011022\nsending N011023\nsending N011024\nsending N011025\nsending N011026\nsending N011027\nsending N011028\nsending N011029\nsending N011030\nsending N011031\nsending N011032\nsending N011033\nsending N011034\nsending N011035\nsending N011036\nsending N011037\nsending N011038\nsending N011039\nsending N011040\nsending N011041\nsending N011042\nsending N011043\nsending N011044\nsending N011045\nsending N011046\nsending N011047\nsending N011048\nsending N011049\nsending N011050\nsending N011051\nsending N011052\nsending N011053\nsending N011054\nsending N011055\nsending N011056\nsending N011057\nsending N011058\nsending N011059\nsending N011060\nsending N011061\nsending N011062\nsending N011063\nsending N011064\nsending N011065\nsending N011066\nsending N011067\nsending N011068\nsending N011069\nsending N011070\nsending N011071\nsending N011072\nsending N011073\nsending N011074\nsending N011075\nsending N011076\nsending N011077\nsending N011078\nsending N011079\nsending N011080\nsending N011081\nsending N011082\nsending N011083\nsending N011084\nsending N011085\nsending N011086\nsending N011087\nsending N011088\nsending N011089\nsending N011090\nsending N011091\nsending N011092\nsending N011093\nsending N011094\nsending N011095\nsending N011096\nsending N011097\nsending N011098\nsending N011099\nsending N011100\nsending N011101\nsending N011102\nsending N011103\nsending N011104\nsending N011105\nsending N011106\nsending N011107\nsending N011108\nsending N011109\nsending N011110\nsending N011111\nsending N011112\nsending N011113\nsending N011114\nsending N011115\nsending N011116\nsending N011117\nsending N011118\nsending N011119\nsending N011120\nsending N011121\nsending N011122\nsending N011123\nsending N011124\nsending N011125\nsending N011126\nsending N011127\nsending N011128\nsending N011129\nsending N011130\nsending N011131\nsending N011132\nsending N011133\nsending N011134\nsending N011135\nsending N011136\nsending N011137\nsending N011138\nsending N011139\nsending N011140\nsending N011141\nsending N011142\nsending N011143\nsending N011144\nsending N011145\nsending N011146\nsending N011147\nsending N011148\nsending N011149\nsending N011150\nsending N011151\nsending N011152\nsending N011153\nsending N011154\nsending N011155\nsending N011156\nsending N011157\nsending N011158\nsending N011159\nsending N011160\nsending N011161\nsending N011162\nsending N011163\nsending N011164\nsending N011165\nsending N011166\nsending N011167\nsending N011168\nsending N011169\nsending N011170\nsending N011171\nsending N011172\nsending N011173\nsending N011174\nsending N011175\nsending N011176\nsending N011177\nsending N011178\nsending N011179\nsending N011180\nsending N011181\nsending N011182\nsending N011183\nsending N011184\nsending N011185\nsending N011186\nsending N011187\nsending N011188\nsending N011189\nsending N011190\nsending N011191\nsending N011192\nsending N011193\nsending N011194\nsending N011195\nsending N011196\nsending N011197\nsending N011198\nsending N011199\nsending N011200\nsending N011201\nsending N011202\nsending N011203\nsending N011204\nsending N011205\nsending N011206\nsending N011207\nsending N011208\nsending N011209\nsending N011210\nsending N011211\nsending N011212\nsending N011213\nsending N011214\nsending N011215\nsending N011216\nsending N011217\nsending N011218\nsending N011219\nsending N011220\nsending N011221\nsending N011222\nsending N011223\nsending N011224\nsending N011225\nsending N011226\nsending N011227\nsending N011228\nsending N011229\nsending N011230\nsending N011231\nsending N011232\nsending N011233\nsending N011234\nsending N011235\nsending N011236\nsending N011237\nsending N011238\nsending N011239\nsending N011240\nsending N011241\nsending N011242\nsending N011243\nsending N011244\nsending N011245\nsending N011246\nsending N011247\nsending N011248\nsending N011249\nsending N011250\nsending N011251\nsending N011252\nsending N011253\nsending N011254\nsending N011255\nsending N011256\nsending N011257\nsending N011258\nsending N011259\nsending N011260\nsending N011261\nsending N011262\nsending N011263\nsending N011264\nsending N011265\nsending N011266\nsending N011267\nsending N011268\nsending N011269\nsending N011270\nsending N011271\nsending N011272\nsending N011273\nsending N011274\nsending N011275\nsending N011276\nsending N011277\nsending N011278\nsending N011279\nsending N011280\nsending N011281\nsending N011282\nsending N011283\nsending N011284\nsending N011285\nsending N011286\nsending N011287\nsending N011288\nsending N011289\nsending N011290\nsending N011291\nsending N011292\nsending N011293\nsending N011294\nsending N011295\nsending N011296\nsending N011297\nsending N011298\nsending N011299\nsending N011300\nsending N011301\nsending N011302\nsending N011303\nsending N011304\nsending N011305\nsending N011306\nsending N011307\nsending N011308\nsending N011309\nsending N011310\nsending N011311\nsending N011312\nsending N011313\nsending N011314\nsending N011315\nsending N011316\nsending N011317\nsending N011318\nsending N011319\nsending N011320\nsending N011321\nsending N011322\nsending N011323\nsending N011324\nsending N011325\nsending N011326\nsending N011327\nsending N011328\nsending N011329\nsending N011330\nsending N011331\nsending N011332\nsending N011333\nsending N011334\nsending N011335\nsending N011336\nsending N011337\nsending N011338\nsending N011339\nsending N011340\nsending N011341\nsending N011342\nsending N011343\nsending N011344\nsending N011345\nsending N011346\nsending N011347\nsending N011348\nsending N011349\nsending N011350\nsending N011351\nsending N011352\nsending N011353\nsending N011354\nsending N011355\nsending N011356\nsending N011357\nsending N011358\nsending N011359\nsending N011360\nsending N011361\nsending N011362\nsending N011363\nsending N011364\nsending N011365\nsending N011366\nsending N011367\nsending N011368\nsending N011369\nsending N011370\nsending N011371\nsending N011372\nsending N011373\nsending N011374\nsending N011375\nsending N011376\nsending N011377\nsending N011378\nsending N011379\nsending N011380\nsending N011381\nsending N011382\nsending N011383\nsending N011384\nsending N011385\nsending N011386\nsending N011387\nsending N011388\nsending N011389\nsending N011390\nsending N011391\nsending N011392\nsending N011393\nsending N011394\nsending N011395\nsending N011396\nsending N011397\nsending N011398\nsending N011399\nsending N011400\nsending N011401\nsending N011402\nsending N011403\nsending N011404\nsending N011405\nsending N011406\nsending N011407\nsending N011408\nsending N011409\nsending N011410\nsending N011411\nsending N011412\nsending N011413\nsending N011414\nsending N011415\nsending N011416\nsending N011417\nsending N011418\nsending N011419\nsending N011420\nsending N011421\nsending N011422\nsending N011423\nsending N011424\nsending N011425\nsending N011426\nsending N011427\nsending N011428\nsending N011429\nsending N011430\nsending N011431\nsending N011432\nsending N011433\nsending N011434\nsending N011435\nsending N011436\nsending N011437\nsending N011438\nsending N011439\nsending N011440\nsending N011441\nsending N011442\nsending N011443\nsending N011444\nsending N011445\nsending N011446\nsending N011447\nsending N011448\nsending N011449\nsending N011450\nsending N011451\nsending N011452\nsending N011453\nsending N011454\nsending N011455\nsending N011456\nsending N011457\nsending N011458\nsending N011459\nsending N011460\nsending N011461\nsending N011462\nsending N011463\nsending N011464\nsending N011465\nsending N011466\nsending N011467\nsending N011468\nsending N011469\nsending N011470\nsending N011471\nsending N011472\nsending N011473\nsending N011474\nsending N011475\nsending N011476\nsending N011477\nsending N011478\nsending N011479\nsending N011480\nsending N011481\nsending N011482\nsending N011483\nsending N011484\nsending N011485\nsending N011486\nsending N011487\nsending N011488\nsending N011489\nsending N011490\nsending N011491\nsending N011492\nsending N011493\nsending N011494\nsending N011495\nsending N011496\nsending N011497\nsending N011498\nsending N011499\nsending N011500\nsending N011501\nsending N011502\nsending N011503\nsending N011504\nsending N011505\nsending N011506\nsending N011507\nsending N011508\nsending N011509\nsending N011510\nsending N011511\nsending N011512\nsending N011513\nsending N011514\nsending N011515\nsending N011516\nsending N011517\nsending N011518\nsending N011519\nsending N011520\nsending N011521\nsending N011522\nsending N011523\nsending N011524\nsending N011525\nsending N011526\nsending N011527\nsending N011528\nsending N011529\nsending N011530\nsending N011531\nsending N011532\nsending N011533\nsending N011534\nsending N011535\nsending N011536\nsending N011537\nsending N011538\nsending N011539\nsending N011540\nsending N011541\nsending N011542\nsending N011543\nsending N011544\nsending N011545\nsending N011546\nsending N011547\nsending N011548\nsending N011549\nsending N011550\nsending N011551\nsending N011552\nsending N011553\nsending N011554\nsending N011555\nsending N011556\nsending N011557\nsending N011558\nsending N011559\nsending N011560\nsending N011561\nsending N011562\nsending N011563\nsending N011564\nsending N011565\nsending N011566\nsending N011567\nsending N011568\nsending N011569\nsending N011570\nsending N011571\nsending N011572\nsending N011573\nsending N011574\nsending N011575\nsending N011576\nsending N011577\nsending N011578\nsending N011579\nsending N011580\nsending N011581\nsending N011582\nsending N011583\nsending N011584\nsending N011585\nsending N011586\nsending N011587\nsending N011588\nsending N011589\nsending N011590\nsending N011591\nsending N011592\nsending N011593\nsending N011594\nsending N011595\nsending N011596\nsending N011597\nsending N011598\nsending N011599\nsending N011600\nsending N011601\nsending N011602\nsending N011603\nsending N011604\nsending N011605\nsending N011606\nsending N011607\nsending N011608\nsending N011609\nsending N011610\nsending N011611\nsending N011612\nsending N011613\nsending N011614\nsending N011615\nsending N011616\nsending N011617\nsending N011618\nsending N011619\nsending N011620\nsending N011621\nsending N011622\nsending N011623\nsending N011624\nsending N011625\nsending N011626\nsending N011627\nsending N011628\nsending N011629\nsending N011630\nsending N011631\nsending N011632\nsending N011633\nsending N011634\nsending N011635\nsending N011636\nsending N011637\nsending N011638\nsending N011639\nsending N011640\nsending N011641\nsending N011642\nsending N011643\nsending N011644\nsending N011645\nsending N011646\nsending N011647\nsending N011648\nsending N011649\nsending N011650\nsending N011651\nsending N011652\nsending N011653\nsending N011654\nsending N011655\nsending N011656\nsending N011657\nsending N011658\nsending N011659\nsending N011660\nsending N011661\nsending N011662\nsending N011663\nsending N011664\nsending N011665\nsending N011666\nsending N011667\nsending N011668\nsending N011669\nsending N011670\nsending N011671\nsending N011672\nsending N011673\nsending N011674\nsending N011675\nsending N011676\nsending N011677\nsending N011678\nsending N011679\nsending N011680\nsending N011681\nsending N011682\nsending N011683\nsending N011684\nsending N011685\nsending N011686\nsending N011687\nsending N011688\nsending N011689\nsending N011690\nsending N011691\nsending N011692\nsending N011693\nsending N011694\nsending N011695\nsending N011696\nsending N011697\nsending N011698\nsending N011699\nsending N011700\nsending N011701\nsending N011702\nsending N011703\nsending N011704\nsending N011705\nsending N011706\nsending N011707\nsending N011708\nsending N011709\nsending N011710\nsending N011711\nsending N011712\nsending N011713\nsending N011714\nsending N011715\nsending N011716\nsending N011717\nsending N011718\nsending N011719\nsending N011720\nsending N011721\nsending N011722\nsending N011723\nsending N011724\nsending N011725\nsending N011726\nsending N011727\nsending N011728\nsending N011729\nsending N011730\nsending N011731\nsending N011732\nsending N011733\nsending N011734\nsending N011735\nsending N011736\nsending N011737\nsending N011738\nsending N011739\nsending N011740\nsending N011741\nsending N011742\nsending N011743\nsending N011744\nsending N011745\nsending N011746\nsending N011747\nsending N011748\nsending N011749\nsending N011750\nsending N011751\nsending N011752\nsending N011753\nsending N011754\nsending N011755\nsending N011756\nsending N011757\nsending N011758\nsending N011759\nsending N011760\nsending N011761\nsending N011762\nsending N011763\nsending N011764\nsending N011765\nsending N011766\nsending N011767\nsending N011768\nsending N011769\nsending N011770\nsending N011771\nsending N011772\nsending N011773\nsending N011774\nsending N011775\nsending N011776\nsending N011777\nsending N011778\nsending N011779\nsending N011780\nsending N011781\nsending N011782\nsending N011783\nsending N011784\nsending N011785\nsending N011786\nsending N011787\nsending N011788\nsending N011789\nsending N011790\nsending N011791\nsending N011792\nsending N011793\nsending N011794\nsending N011795\nsending N011796\nsending N011797\nsending N011798\nsending N011799\nsending N011800\nsending N011801\nsending N011802\nsending N011803\nsending N011804\nsending N011805\nsending N011806\nsending N011807\nsending N011808\nsending N011809\nsending N011810\nsending N011811\nsending N011812\nsending N011813\nsending N011814\nsending N011815\nsending N011816\nsending N011817\nsending N011818\nsending N011819\nsending N011820\nsending N011821\nsending N011822\nsending N011823\nsending N011824\nsending N011825\nsending N011826\nsending N011827\nsending N011828\nsending N011829\nsending N011830\nsending N011831\nsending N011832\nsending N011833\nsending N011834\nsending N011835\nsending N011836\nsending N011837\nsending N011838\nsending N011839\nsending N011840\nsending N011841\nsending N011842\nsending N011843\nsending N011844\nsending N011845\nsending N011846\nsending N011847\nsending N011848\nsending N011849\nsending N011850\nsending N011851\nsending N011852\nsending N011853\nsending N011854\nsending N011855\nsending N011856\nsending N011857\nsending N011858\nsending N011859\nsending N011860\nsending N011861\nsending N011862\nsending N011863\nsending N011864\nsending N011865\nsending N011866\nsending N011867\nsending N011868\nsending N011869\nsending N011870\nsending N011871\nsending N011872\nsending N011873\nsending N011874\nsending N011875\nsending N011876\nsending N011877\nsending N011878\nsending N011879\nsending N011880\nsending N011881\nsending N011882\nsending N011883\nsending N011884\nsending N011885\nsending N011886\nsending N011887\nsending N011888\nsending N011889\nsending N011890\nsending N011891\nsending N011892\nsending N011893\nsending N011894\nsending N011895\nsending N011896\nsending N011897\nsending N011898\nsending N011899\nsending N011900\nsending N011901\nsending N011902\nsending N011903\nsending N011904\nsending N011905\nsending N011906\nsending N011907\nsending N011908\nsending N011909\nsending N011910\nsending N011911\nsending N011912\nsending N011913\nsending N011914\nsending N011915\nsending N011916\nsending N011917\nsending N011918\nsending N011919\nsending N011920\nsending N011921\nsending N011922\nsending N011923\nsending N011924\nsending N011925\nsending N011926\nsending N011927\nsending N011928\nsending N011929\nsending N011930\nsending N011931\nsending N011932\nsending N011933\nsending N011934\nsending N011935\nsending N011936\nsending N011937\nsending N011938\nsending N011939\nsending N011940\nsending N011941\nsending N011942\nsending N011943\nsending N011944\nsending N011945\nsending N011946\nsending N011947\nsending N011948\nsending N011949\nsending N011950\nsending N011951\nsending N011952\nsending N011953\nsending N011954\nsending N011955\nsending N011956\nsending N011957\nsending N011958\nsending N011959\nsending N011960\nsending N011961\nsending N011962\nsending N011963\nsending N011964\nsending N011965\nsending N011966\nsending N011967\nsending N011968\nsending N011969\nsending N011970\nsending N011971\nsending N011972\nsending N011973\nsending N011974\nsending N011975\nsending N011976\nsending N011977\nsending N011978\nsending N011979\nsending N011980\nsending N011981\nsending N011982\nsending N011983\nsending N011984\nsending N011985\nsending N011986\nsending N011987\nsending N011988\nsending N011989\nsending N011990\nsending N011991\nsending N011992\nsending N011993\nsending N011994\nsending N011995\nsending N011996\nsending N011997\nsending N011998\nsending N011999\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending {self.cont_info.newcmd_dict.get("rmc")[0]}{_}\nsending N011500\nsending N011501\nsending N011502\nsending N011503\nsending N011504\nsending N011505\nsending N011506\nsending N011507\nsending N011508\nsending N011509\nsending N011510\nsending N011511\nsending N011512\nsending N011513\nsending N011514\nsending N011515\nsending N011516\nsending N011517\nsending N011518\nsending N011519\nsending N011520\nsending N011521\nsending N011522\nsending N011523\nsending N011524\nsending N011525\nsending N011526\nsending N011527\nsending N011528\nsending N011529\nsending N011530\nsending N011531\nsending N011532\nsending N011533\nsending N011534\nsending N011535\nsending N011536\nsending N011537\nsending N011538\nsending N011539\nsending N011540\nsending N011541\nsending N011542\nsending N011543\nsending N011544\nsending N011545\nsending N011546\nsending N011547\nsending N011548\nsending N011549\nsending N011550\nsending N011551\nsending N011552\nsending N011553\nsending N011554\nsending N011555\nsending N011556\nsending N011557\nsending N011558\nsending N011559\nsending N011560\nsending N011561\nsending N011562\nsending N011563\nsending N011564\nsending N011565\nsending N011566\nsending N011567\nsending N011568\nsending N011569\nsending N011570\nsending N011571\nsending N011572\nsending N011573\nsending N011574\nsending N011575\nsending N011576\nsending N011577\nsending N011578\nsending N011579\nsending N011580\nsending N011581\nsending N011582\nsending N011583\nsending N011584\nsending N011585\nsending N011586\nsending N011587\nsending N011588\nsending N011589\nsending N011590\nsending N011591\nsending N011592\nsending N011593\nsending N011594\nsending N011595\nsending N011596\nsending N011597\nsending N011598\nsending N011599\nsending N011600\nsending N011601\nsending N011602\nsending N011603\nsending N011604\nsending N011605\nsending N011606\nsending N011607\nsending N011608\nsending N011609\nsending N011610\nsending N011611\nsending N011612\nsending N011613\nsending N011614\nsending N011615\nsending N011616\nsending N011617\nsending N011618\nsending N011619\nsending N011620\nsending N011621\nsending N011622\nsending N011623\nsending N011624\nsending N011625\nsending N011626\nsending N011627\nsending N011628\nsending N011629\nsending N011630\nsending N011631\nsending N011632\nsending N011633\nsending N011634\nsending N011635\nsending N011636\nsending N011637\nsending N011638\nsending N011639\nsending N011640\nsending N011641\nsending N011642\nsending N011643\nsending N011644\nsending N011645\nsending N011646\nsending N011647\nsending N011648\nsending N011649\nsending N011650\nsending N011651\nsending N011652\nsending N011653\nsending N011654\nsending N011655\nsending N011656\nsending N011657\nsending N011658\nsending N011659\nsending N011660\nsending N011661\nsending N011662\nsending N011663\nsending N011664\nsending N011665\nsending N011666\nsending N011667\nsending N011668\nsending N011669\nsending N011670\nsending N011671\nsending N011672\nsending N011673\nsending N011674\nsending N011675\nsending N011676\nsending N011677\nsending N011678\nsending N011679\nsending N011680\nsending N011681\nsending N011682\nsending N011683\nsending N011684\nsending N011685\nsending N011686\nsending N011687\nsending N011688\nsending N011689\nsending N011690\nsending N011691\nsending N011692\nsending N011693\nsending N011694\nsending N011695\nsending N011696\nsending N011697\nsending N011698\nsending N011699\nsending N011700\nsending N011701\nsending N011702\nsending N011703\nsending N011704\nsending N011705\nsending N011706\nsending N011707\nsending N011708\nsending N011709\nsending N011710\nsending N011711\nsending N011712\nsending N011713\nsending N011714\nsending N011715\nsending N011716\nsending N011717\nsending N011718\nsending N011719\nsending N011720\nsending N011721\nsending N011722\nsending N011723\nsending N011724\nsending N011725\nsending N011726\nsending N011727\nsending N011728\nsending N011729\nsending N011730\nsending N011731\nsending N011732\nsending N011733\nsending N011734\nsending N011735\nsending N011736\nsending N011737\nsending N011738\nsending N011739\nsending N011740\nsending N011741\nsending N011742\nsending N011743\nsending N011744\nsending N011745\nsending N011746\nsending N011747\nsending N011748\nsending N011749\nsending N011750\nsending N011751\nsending N011752\nsending N011753\nsending N011754\nsending N011755\nsending N011756\nsending N011757\nsending N011758\nsending N011759\nsending N011760\nsending N011761\nsending N011762\nsending N011763\nsending N011764\nsending N011765\nsending N011766\nsending N011767\nsending N011768\nsending N011769\nsending N011770\nsending N011771\nsending N011772\nsending N011773\nsending N011774\nsending N011775\nsending N011776\nsending N011777\nsending N011778\nsending N011779\nsending N011780\nsending N011781\nsending N011782\nsending N011783\nsending N011784\nsending N011785\nsending N011786\nsending N011787\nsending N011788\nsending N011789\nsending N011790\nsending N011791\nsending N011792\nsending N011793\nsending N011794\nsending N011795\nsending N011796\nsending N011797\nsending N011798\nsending N011799\nsending N011800\nsending N011801\nsending N011802\nsending N011803\nsending N011804\nsending N011805\nsending N011806\nsending N011807\nsending N011808\nsending N011809\nsending N011810\nsending N011811\nsending N011812\nsending N011813\nsending N011814\nsending N011815\nsending N011816\nsending N011817\nsending N011818\nsending N011819\nsending N011820\nsending N011821\nsending N011822\nsending N011823\nsending N011824\nsending N011825\nsending N011826\nsending N011827\nsending N011828\nsending N011829\nsending N011830\nsending N011831\nsending N011832\nsending N011833\nsending N011834\nsending N011835\nsending N011836\nsending N011837\nsending N011838\nsending N011839\nsending N011840\nsending N011841\nsending N011842\nsending N011843\nsending N011844\nsending N011845\nsending N011846\nsending N011847\nsending N011848\nsending N011849\nsending N011850\nsending N011851\nsending N011852\nsending N011853\nsending N011854\nsending N011855\nsending N011856\nsending N011857\nsending N011858\nsending N011859\nsending N011860\nsending N011861\nsending N011862\nsending N011863\nsending N011864\nsending N011865\nsending N011866\nsending N011867\nsending N011868\nsending N011869\nsending N011870\nsending N011871\nsending N011872\nsending N011873\nsending N011874\nsending N011875\nsending N011876\nsending N011877\nsending N011878\nsending N011879\nsending N011880\nsending N011881\nsending N011882\nsending N011883\nsending N011884\nsending N011885\nsending N011886\nsending N011887\nsending N011888\nsending N011889\nsending N011890\nsending N011891\nsending N011892\nsending N011893\nsending N011894\nsending N011895\nsending N011896\nsending N011897\nsending N011898\nsending N011899\nsending N011900\nsending N011901\nsending N011902\nsending N011903\nsending N011904\nsending N011905\nsending N011906\nsending N011907\nsending N011908\nsending N011909\nsending N011910\nsending N011911\nsending N011912\nsending N011913\nsending N011914\nsending N011915\nsending N011916\nsending N011917\nsending N011918\nsending N011919\nsending N011920\nsending N011921\nsending N011922\nsending N011923\nsending N011924\nsending N011925\nsending N011926\nsending N011927\nsending N011928\nsending N011929\nsending N011930\nsending N011931\nsending N011932\nsending N011933\nsending N011934\nsending N011935\nsending N011936\nsending N011937\nsending N011938\nsending N011939\nsending N011940\nsending N011941\nsending N011942\nsending N011943\nsending N011944\nsending N011945\nsending N011946\nsending N011947\nsending N011948\nsending N011949\nsending N011950\nsending N011951\nsending N011952\nsending N011953\nsending N011954\nsending N011955\nsending N011956\nsending N011957\nsending N011958\nsending N011959\nsending N011960\nsending N011961\nsending N011962\nsending N011963\nsending N011964\nsending N011965\nsending N011966\nsending N011967\nsending N011968\nsending N011969\nsending N011970\nsending N011971\nsending N011972\nsending N011973\nsending N011974\nsending N011975\nsending N011976\nsending N011977\nsending N011978\nsending N011979\nsending N011980\nsending N011981\nsending N011982\nsending N011983\nsending N011984\nsending N011985\nsending N011986\nsending N011987\nsending N011988\nsending N011989\nsending N011990\nsending N011991\nsending N011992\nsending N011993\nsending N011994\nsending N011995\nsending N011996\nsending N011997\nsending N011998\nsending N011999\n',
                              '',
                              None,
                              1603683073,
                              79)]),
                           (u'm:\\Python\\Python3_packages\\repeaterControlerDownloader\\tests\\test_controllerspecific.py',
                            [('TestControllerspecific.testcreation',
                              0,
                              None,
                              '',
                              None,
                              1603683341,
                              29),
                             ('TestControllerspecific.testfmtRMC',
                              0,
                              None,
                              '',
                              None,
                              1603683341,
                              46)])],
                          {})
testing.what-results-to-store = 'all'
versioncontrol.git.remote-history = ['https://gitlab.com/dbcurtis/repeaterCo'\
                                     'ntrolTool.git',
                                     'ssh://git@gitlab.com:dbcurtis/repeater'\
                                     'ControlTool.git',
                                     'git@gitlab.com:dbcurtis/repeaterContro'\
                                     'lTool.git']
versioncontrol.show-unregistered-in-status = True
